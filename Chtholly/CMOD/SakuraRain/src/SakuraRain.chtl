[Template] @Style ChthollysakuraRainStyle {
    .chtholly-sakura-rain {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        pointer-events: none;
        overflow: hidden;
        z-index: 1000;
    }
    
    .chtholly-sakura-petal {
        position: absolute;
        width: 12px;
        height: 12px;
        background: radial-gradient(circle at 30% 30%, #ffb3d9, #ff9ec7, #fd79a8);
        border-radius: 50% 0 50% 0;
        transform: rotate(45deg);
        opacity: 0.8;
        animation: sakuraFalling linear infinite;
        box-shadow: 0 2px 4px rgba(253, 121, 168, 0.3);
    }
    
    .chtholly-sakura-petal::before {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at 70% 70%, rgba(255, 255, 255, 0.6), transparent);
        border-radius: 50% 0 50% 0;
        top: -2px;
        left: -2px;
    }
    
    .chtholly-sakura-petal.variant-1 {
        background: radial-gradient(circle at 30% 30%, #fdcb6e, #f39c12, #e67e22);
        animation-duration: 8s;
        width: 10px;
        height: 10px;
    }
    
    .chtholly-sakura-petal.variant-2 {
        background: radial-gradient(circle at 30% 30%, #a29bfe, #6c5ce7, #5a4fcf);
        animation-duration: 12s;
        width: 14px;
        height: 14px;
    }
    
    .chtholly-sakura-petal.variant-3 {
        background: radial-gradient(circle at 30% 30%, #fab1a0, #e17055, #d63031);
        animation-duration: 15s;
        width: 8px;
        height: 8px;
    }
    
    @keyframes sakuraFalling {
        0% {
            transform: translateY(-100vh) rotate(45deg) rotateY(0deg);
            opacity: 0;
        }
        10% {
            opacity: 0.8;
        }
        90% {
            opacity: 0.8;
        }
        100% {
            transform: translateY(100vh) rotate(405deg) rotateY(360deg);
            opacity: 0;
        }
    }
    
    .chtholly-sakura-controller {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: linear-gradient(45deg, var(--chtholly-primary), var(--chtholly-secondary));
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        color: white;
        font-size: 24px;
        cursor: pointer;
        box-shadow: var(--chtholly-shadow-lg);
        transition: all ChthollyAnimations();
        z-index: 1001;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .chtholly-sakura-controller:hover {
        transform: scale(1.1) rotate(15deg);
        box-shadow: var(--chtholly-shadow-magical);
    }
    
    .chtholly-sakura-controller.active {
        background: linear-gradient(45deg, var(--chtholly-success), var(--chtholly-accent));
        animation: pulseController 2s ease-in-out infinite;
    }
    
    @keyframes pulseController {
        0%, 100% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.05);
        }
    }
}

[Template] @Element ChthollysakuraRain {
    div {
        class: "chtholly-sakura-rain";
        id: sakuraRainId;
        style: "display: none;";
    }
    
    button {
        class: "chtholly-sakura-controller";
        id: sakuraControlId;
        onclick: "toggleSakuraRain()";
        title: "珂朵莉的樱花雨";
        text: "🌸";
    }
}

// 在任意位置使用[Origin] - 樱花雨脚本
[Origin] @JavaScript SakuraRainScript {
    class ChthollysakuraRain {
        constructor(containerId, controllerId) {
            this.container = document.getElementById(containerId);
            this.controller = document.getElementById(controllerId);
            this.isActive = false;
            this.petals = [];
            this.intervalId = null;
            this.maxPetals = 50;
            this.petalTypes = ['', 'variant-1', 'variant-2', 'variant-3'];
            
            this.init();
        }
        
        init() {
            // 检查用户偏好
            const savedState = localStorage.getItem('chtholly-sakura-enabled');
            if (savedState === 'true') {
                this.start();
            }
        }
        
        start() {
            if (this.isActive) return;
            
            this.isActive = true;
            this.container.style.display = 'block';
            this.controller.classList.add('active');
            
            // 保存用户偏好
            localStorage.setItem('chtholly-sakura-enabled', 'true');
            
            // 创建初始樱花
            this.createBurst();
            
            // 定期创建新樱花
            this.intervalId = setInterval(() => {
                this.createPetal();
                this.cleanupPetals();
            }, 200);
            
            // 添加珂朵莉祝福特效
            this.showBlessingMessage('珂朵莉的樱花雨开始了~ 🌸✨');
        }
        
        stop() {
            if (!this.isActive) return;
            
            this.isActive = false;
            this.controller.classList.remove('active');
            
            // 保存用户偏好
            localStorage.setItem('chtholly-sakura-enabled', 'false');
            
            // 停止创建新樱花
            if (this.intervalId) {
                clearInterval(this.intervalId);
                this.intervalId = null;
            }
            
            // 淡出现有樱花
            this.fadeOutPetals();
            
            setTimeout(() => {
                this.container.style.display = 'none';
                this.clearAllPetals();
            }, 2000);
            
            this.showBlessingMessage('樱花雨暂停了，但珂朵莉的祝福永远与你同在 💕');
        }
        
        toggle() {
            if (this.isActive) {
                this.stop();
            } else {
                this.start();
            }
        }
        
        createPetal() {
            if (this.petals.length >= this.maxPetals) return;
            
            const petal = document.createElement('div');
            petal.className = 'chtholly-sakura-petal ' + this.getRandomVariant();
            
            // 随机位置和动画时间
            const startX = Math.random() * 100;
            const animationDuration = 8 + Math.random() * 10; // 8-18秒
            const horizontalDrift = (Math.random() - 0.5) * 200; // 左右飘移
            
            petal.style.left = startX + '%';
            petal.style.animationDuration = animationDuration + 's';
            petal.style.animationDelay = Math.random() * 2 + 's';
            
            // 添加水平飘移
            petal.style.setProperty('--horizontal-drift', horizontalDrift + 'px');
            
            this.container.appendChild(petal);
            this.petals.push(petal);
            
            // 自动清理
            setTimeout(() => {
                this.removePetal(petal);
            }, (animationDuration + 2) * 1000);
        }
        
        createBurst() {
            // 创建初始爆发效果
            for (let i = 0; i < 15; i++) {
                setTimeout(() => {
                    this.createPetal();
                }, i * 100);
            }
        }
        
        getRandomVariant() {
            return this.petalTypes[Math.floor(Math.random() * this.petalTypes.length)];
        }
        
        removePetal(petal) {
            const index = this.petals.indexOf(petal);
            if (index > -1) {
                this.petals.splice(index, 1);
            }
            
            if (petal.parentNode) {
                petal.parentNode.removeChild(petal);
            }
        }
        
        cleanupPetals() {
            // 清理超出数量限制的樱花
            while (this.petals.length > this.maxPetals) {
                const oldestPetal = this.petals.shift();
                if (oldestPetal.parentNode) {
                    oldestPetal.parentNode.removeChild(oldestPetal);
                }
            }
        }
        
        fadeOutPetals() {
            this.petals.forEach(petal => {
                petal.style.transition = 'opacity 2s ease-out';
                petal.style.opacity = '0';
            });
        }
        
        clearAllPetals() {
            this.petals.forEach(petal => {
                if (petal.parentNode) {
                    petal.parentNode.removeChild(petal);
                }
            });
            this.petals = [];
        }
        
        showBlessingMessage(message) {
            const blessing = document.createElement('div');
            blessing.style.cssText = `
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background: linear-gradient(45deg, rgba(253, 121, 168, 0.9), rgba(253, 203, 110, 0.9));
                color: white;
                padding: 20px 30px;
                border-radius: 15px;
                font-size: 18px;
                font-weight: 600;
                text-align: center;
                box-shadow: 0 8px 32px rgba(253, 121, 168, 0.4);
                z-index: 10000;
                animation: blessingAppear 3s ease-out forwards;
                pointer-events: none;
                font-family: ${getComputedStyle(document.documentElement).getPropertyValue('--chtholly-font-family')};
            `;
            blessing.textContent = message;
            
            document.body.appendChild(blessing);
            
            setTimeout(() => blessing.remove(), 3000);
        }
    }
    
    // 全局实例
    let chthollysakuraRain = null;
    
    function toggleSakuraRain() {
        if (chthollysakuraRain) {
            chthollysakuraRain.toggle();
        }
    }
    
    function initializeSakuraRain() {
        // 等待DOM加载完成
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initializeSakuraRain);
            return;
        }
        
        // 查找樱花雨容器
        const rainContainer = document.querySelector('.chtholly-sakura-rain');
        const controller = document.querySelector('.chtholly-sakura-controller');
        
        if (rainContainer && controller) {
            chthollysakuraRain = new ChthollysakuraRain(rainContainer.id, controller.id);
        }
    }
    
    // 页面加载时初始化
    initializeSakuraRain();
    
    // 响应用户交互 - 在特殊时刻自动触发樱花雨
    document.addEventListener('click', function(e) {
        // 如果点击了珂朵莉相关的元素，触发短暂的樱花雨
        if (e.target.textContent && e.target.textContent.includes('珂朵莉')) {
            if (chthollysakuraRain && !chthollysakuraRain.isActive) {
                chthollysakuraRain.start();
                setTimeout(() => {
                    if (chthollysakuraRain.isActive) {
                        chthollysakuraRain.stop();
                    }
                }, 5000); // 5秒后自动停止
            }
        }
    });
}

// 樱花雨专属动画样式
[Origin] @Style SakuraAnimations {
    @keyframes blessingAppear {
        0% {
            opacity: 0;
            transform: translate(-50%, -50%) scale(0.5);
        }
        20% {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1.1);
        }
        80% {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1);
        }
        100% {
            opacity: 0;
            transform: translate(-50%, -50%) scale(0.8);
        }
    }
    
    /* 增强的樱花飘落动画 */
    @keyframes sakuraFalling {
        0% {
            transform: translateY(-100vh) translateX(0) rotate(45deg) rotateY(0deg);
            opacity: 0;
        }
        10% {
            opacity: 0.8;
        }
        25% {
            transform: translateY(-50vh) translateX(var(--horizontal-drift, 0px)) rotate(145deg) rotateY(90deg);
        }
        50% {
            transform: translateY(0vh) translateX(calc(var(--horizontal-drift, 0px) * 0.5)) rotate(245deg) rotateY(180deg);
        }
        75% {
            transform: translateY(50vh) translateX(var(--horizontal-drift, 0px)) rotate(345deg) rotateY(270deg);
        }
        90% {
            opacity: 0.8;
        }
        100% {
            transform: translateY(100vh) translateX(0) rotate(405deg) rotateY(360deg);
            opacity: 0;
        }
    }
}