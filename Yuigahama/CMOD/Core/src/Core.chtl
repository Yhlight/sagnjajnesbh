[Template] @Style YuigahamaCore {
    :root {
        /* 由比滨结衣主题色彩 */
        --yuigahama-primary: #ff6b9d;
        --yuigahama-secondary: #c44569;
        --yuigahama-accent: #f8b500;
        --yuigahama-success: #55a3ff;
        --yuigahama-warning: #feca57;
        --yuigahama-danger: #ff6b6b;
        --yuigahama-info: #54a0ff;
        
        /* 音乐主题色彩 */
        --yuigahama-music-primary: #ff9ff3;
        --yuigahama-music-secondary: #f368e0;
        --yuigahama-music-accent: #ff3838;
        --yuigahama-voice-primary: #3742fa;
        --yuigahama-voice-secondary: #2f3542;
        
        /* 文字颜色 */
        --yuigahama-text-primary: #2d3436;
        --yuigahama-text-secondary: #636e72;
        --yuigahama-text-muted: #b2bec3;
        --yuigahama-text-white: #ffffff;
        
        /* 背景色 */
        --yuigahama-bg-primary: #ffffff;
        --yuigahama-bg-secondary: #f8f9fa;
        --yuigahama-bg-muted: #e9ecef;
        --yuigahama-bg-dark: #2d3436;
        
        /* 边框 */
        --yuigahama-border-light: #dee2e6;
        --yuigahama-border-medium: #adb5bd;
        --yuigahama-border-dark: #6c757d;
        
        /* 阴影 */
        --yuigahama-shadow-sm: 0 2px 4px rgba(255, 107, 157, 0.1);
        --yuigahama-shadow-md: 0 4px 8px rgba(255, 107, 157, 0.15);
        --yuigahama-shadow-lg: 0 8px 16px rgba(255, 107, 157, 0.2);
        --yuigahama-shadow-xl: 0 12px 24px rgba(255, 107, 157, 0.25);
        --yuigahama-shadow-musical: 0 8px 32px rgba(255, 159, 243, 0.4);
        --yuigahama-shadow-voice: 0 8px 32px rgba(55, 66, 250, 0.3);
        
        /* 圆角 */
        --yuigahama-radius-sm: 4px;
        --yuigahama-radius-base: 8px;
        --yuigahama-radius-lg: 12px;
        --yuigahama-radius-xl: 16px;
        --yuigahama-radius-full: 9999px;
        
        /* 间距 */
        --yuigahama-space-1: 4px;
        --yuigahama-space-2: 8px;
        --yuigahama-space-3: 12px;
        --yuigahama-space-4: 16px;
        --yuigahama-space-5: 20px;
        --yuigahama-space-6: 24px;
        --yuigahama-space-8: 32px;
        --yuigahama-space-10: 40px;
        --yuigahama-space-12: 48px;
        --yuigahama-space-16: 64px;
        
        /* 字体 */
        --yuigahama-font-family: 'Segoe UI', 'Microsoft YaHei', '微软雅黑', 'PingFang SC', 'Hiragino Sans GB', sans-serif;
        --yuigahama-font-mono: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
        
        /* 字体大小 */
        --yuigahama-font-xs: 12px;
        --yuigahama-font-sm: 14px;
        --yuigahama-font-base: 16px;
        --yuigahama-font-lg: 18px;
        --yuigahama-font-xl: 20px;
        --yuigahama-font-2xl: 24px;
        --yuigahama-font-3xl: 30px;
        --yuigahama-font-4xl: 36px;
        
        /* 字体粗细 */
        --yuigahama-font-light: 300;
        --yuigahama-font-normal: 400;
        --yuigahama-font-medium: 500;
        --yuigahama-font-semibold: 600;
        --yuigahama-font-bold: 700;
        --yuigahama-font-extrabold: 800;
        
        /* 行高 */
        --yuigahama-leading-tight: 1.25;
        --yuigahama-leading-normal: 1.5;
        --yuigahama-leading-relaxed: 1.75;
        
        /* Z轴层级 */
        --yuigahama-z-base: 0;
        --yuigahama-z-dropdown: 1000;
        --yuigahama-z-sticky: 1020;
        --yuigahama-z-fixed: 1030;
        --yuigahama-z-modal: 1040;
        --yuigahama-z-popover: 1050;
        --yuigahama-z-tooltip: 1060;
        --yuigahama-z-toast: 1070;
        
        /* 过渡动画 */
        --yuigahama-transition-fast: 0.15s ease;
        --yuigahama-transition-normal: 0.3s ease;
        --yuigahama-transition-slow: 0.5s ease;
        --yuigahama-transition-bounce: 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        --yuigahama-transition-smooth: 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }
    
    /* 由比滨结衣全局样式重置 */
    .yuigahama-reset {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: var(--yuigahama-font-family);
    }
    
    .yuigahama-container {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 var(--yuigahama-space-4);
    }
    
    /* 音乐主题渐变 */
    .yuigahama-gradient-music {
        background: linear-gradient(135deg, 
            var(--yuigahama-music-primary), 
            var(--yuigahama-music-secondary),
            var(--yuigahama-music-accent));
    }
    
    .yuigahama-gradient-voice {
        background: linear-gradient(135deg, 
            var(--yuigahama-voice-primary), 
            var(--yuigahama-voice-secondary));
    }
    
    .yuigahama-gradient-primary {
        background: linear-gradient(135deg, 
            var(--yuigahama-primary), 
            var(--yuigahama-secondary),
            var(--yuigahama-accent));
    }
    
    /* 音乐波纹动画 */
    .yuigahama-music-wave {
        position: relative;
        overflow: hidden;
    }
    
    .yuigahama-music-wave::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, 
            transparent, 
            rgba(255, 159, 243, 0.3), 
            transparent);
        animation: yuigahamaMusicWave 2s ease-in-out infinite;
    }
    
    /* 声音可视化效果 */
    .yuigahama-voice-visualizer {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: var(--yuigahama-space-1);
        height: 20px;
    }
    
    .yuigahama-voice-bar {
        width: 3px;
        background: var(--yuigahama-voice-primary);
        border-radius: var(--yuigahama-radius-full);
        animation: yuigahamaVoiceBar 1.5s ease-in-out infinite;
    }
    
    .yuigahama-voice-bar:nth-child(1) { height: 8px; animation-delay: 0s; }
    .yuigahama-voice-bar:nth-child(2) { height: 12px; animation-delay: 0.1s; }
    .yuigahama-voice-bar:nth-child(3) { height: 16px; animation-delay: 0.2s; }
    .yuigahama-voice-bar:nth-child(4) { height: 20px; animation-delay: 0.3s; }
    .yuigahama-voice-bar:nth-child(5) { height: 16px; animation-delay: 0.4s; }
    .yuigahama-voice-bar:nth-child(6) { height: 12px; animation-delay: 0.5s; }
    .yuigahama-voice-bar:nth-child(7) { height: 8px; animation-delay: 0.6s; }
    
    /* 按钮样式 */
    .yuigahama-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: var(--yuigahama-space-2);
        padding: var(--yuigahama-space-3) var(--yuigahama-space-4);
        border: none;
        border-radius: var(--yuigahama-radius-base);
        font-size: var(--yuigahama-font-sm);
        font-weight: var(--yuigahama-font-medium);
        font-family: var(--yuigahama-font-family);
        cursor: pointer;
        transition: all var(--yuigahama-transition-normal);
        text-decoration: none;
        outline: none;
        position: relative;
        overflow: hidden;
    }
    
    .yuigahama-btn:hover {
        transform: translateY(-2px);
        box-shadow: var(--yuigahama-shadow-lg);
    }
    
    .yuigahama-btn:active {
        transform: translateY(0);
    }
    
    .yuigahama-btn-primary {
        background: var(--yuigahama-primary);
        color: var(--yuigahama-text-white);
    }
    
    .yuigahama-btn-music {
        background: linear-gradient(45deg, 
            var(--yuigahama-music-primary), 
            var(--yuigahama-music-secondary));
        color: var(--yuigahama-text-white);
    }
    
    .yuigahama-btn-voice {
        background: linear-gradient(45deg, 
            var(--yuigahama-voice-primary), 
            var(--yuigahama-voice-secondary));
        color: var(--yuigahama-text-white);
    }
    
    /* 卡片样式 */
    .yuigahama-card {
        background: var(--yuigahama-bg-primary);
        border-radius: var(--yuigahama-radius-lg);
        box-shadow: var(--yuigahama-shadow-md);
        padding: var(--yuigahama-space-6);
        transition: all var(--yuigahama-transition-normal);
        border: 1px solid var(--yuigahama-border-light);
    }
    
    .yuigahama-card:hover {
        transform: translateY(-4px);
        box-shadow: var(--yuigahama-shadow-xl);
    }
    
    /* 音符装饰 */
    .yuigahama-music-note {
        font-size: var(--yuigahama-font-lg);
        color: var(--yuigahama-music-primary);
        animation: yuigahamaMusicNote 3s ease-in-out infinite;
    }
    
    /* 工具函数 */
    .yuigahama-flex {
        display: flex;
    }
    
    .yuigahama-flex-center {
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .yuigahama-flex-between {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    
    .yuigahama-text-center {
        text-align: center;
    }
    
    .yuigahama-hidden {
        display: none !important;
    }
    
    .yuigahama-sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
    }
    
    /* 动画定义 */
    @keyframes yuigahamaMusicWave {
        0% {
            left: -100%;
        }
        100% {
            left: 100%;
        }
    }
    
    @keyframes yuigahamaVoiceBar {
        0%, 100% {
            transform: scaleY(1);
            opacity: 0.7;
        }
        50% {
            transform: scaleY(1.8);
            opacity: 1;
        }
    }
    
    @keyframes yuigahamaMusicNote {
        0%, 100% {
            transform: translateY(0) rotate(0deg);
            opacity: 0.7;
        }
        25% {
            transform: translateY(-5px) rotate(-5deg);
            opacity: 1;
        }
        75% {
            transform: translateY(-3px) rotate(5deg);
            opacity: 1;
        }
    }
    
    /* 响应式断点 */
    @media (max-width: 768px) {
        .yuigahama-container {
            padding: 0 var(--yuigahama-space-3);
        }
        
        .yuigahama-card {
            padding: var(--yuigahama-space-4);
        }
    }
}

[Template] @Var YuigahamaSpacing {
    var(--yuigahama-space-4)
}

[Template] @Var YuigahamaAnimations {
    var(--yuigahama-transition-normal)
}

[Template] @Var YuigahamaFonts {
    var(--yuigahama-font-family)
}

[Template] @Var YuigahamaShadows {
    var(--yuigahama-shadow-md)
}

[Template] @Var YuigahamaMusicColors {
    var(--yuigahama-music-primary)
}

[Template] @Var YuigahamaVoiceColors {
    var(--yuigahama-voice-primary)
}

// 由比滨结衣专用工具函数 - 在模板变量后使用[Origin]
[Origin] @JavaScript YuigahamaUtils {
    // 由比滨结衣模块工具函数集合
    class YuigahamaUtils {
        // 音频工具
        static createAudioContext() {
            try {
                return new (window.AudioContext || window.webkitAudioContext)();
            } catch (e) {
                console.warn('音频上下文创建失败:', e);
                return null;
            }
        }
        
        // 时间格式化
        static formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const remainingSeconds = Math.floor(seconds % 60);
            return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
        }
        
        // 频率分析
        static createAnalyser(audioContext, source) {
            if (!audioContext || !source) return null;
            
            const analyser = audioContext.createAnalyser();
            analyser.fftSize = 256;
            source.connect(analyser);
            return analyser;
        }
        
        // 音量计算
        static getVolumeFromBuffer(buffer) {
            if (!buffer || buffer.length === 0) return 0;
            
            let sum = 0;
            for (let i = 0; i < buffer.length; i++) {
                sum += buffer[i] * buffer[i];
            }
            
            return Math.sqrt(sum / buffer.length);
        }
        
        // 颜色工具
        static hexToRgb(hex) {
            const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
            return result ? {
                r: parseInt(result[1], 16),
                g: parseInt(result[2], 16),
                b: parseInt(result[3], 16)
            } : null;
        }
        
        // 本地存储
        static saveToStorage(key, data) {
            try {
                localStorage.setItem(`yuigahama_${key}`, JSON.stringify(data));
                return true;
            } catch (e) {
                console.warn('存储失败:', e);
                return false;
            }
        }
        
        static loadFromStorage(key, defaultValue = null) {
            try {
                const data = localStorage.getItem(`yuigahama_${key}`);
                return data ? JSON.parse(data) : defaultValue;
            } catch (e) {
                console.warn('读取存储失败:', e);
                return defaultValue;
            }
        }
        
        // 事件工具
        static debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
        
        static throttle(func, limit) {
            let inThrottle;
            return function(...args) {
                if (!inThrottle) {
                    func.apply(this, args);
                    inThrottle = true;
                    setTimeout(() => inThrottle = false, limit);
                }
            };
        }
        
        // 动画工具
        static easeInOutCubic(t) {
            return t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;
        }
        
        static animate(options) {
            const { duration = 1000, from = 0, to = 1, onUpdate, onComplete } = options;
            const startTime = performance.now();
            
            function update(currentTime) {
                const elapsed = currentTime - startTime;
                const progress = Math.min(elapsed / duration, 1);
                const easedProgress = YuigahamaUtils.easeInOutCubic(progress);
                const value = from + (to - from) * easedProgress;
                
                if (onUpdate) onUpdate(value, progress);
                
                if (progress < 1) {
                    requestAnimationFrame(update);
                } else if (onComplete) {
                    onComplete();
                }
            }
            
            requestAnimationFrame(update);
        }
        
        // 随机工具
        static randomBetween(min, max) {
            return Math.random() * (max - min) + min;
        }
        
        static randomChoice(array) {
            return array[Math.floor(Math.random() * array.length)];
        }
        
        // 由比滨主题特效
        static createYuigahamaParticle(x, y, type = 'music') {
            const particle = document.createElement('div');
            const colors = type === 'music' 
                ? ['#ff9ff3', '#f368e0', '#ff3838']
                : ['#3742fa', '#2f3542', '#ff6b9d'];
            
            particle.style.cssText = `
                position: fixed;
                width: 6px;
                height: 6px;
                background: ${YuigahamaUtils.randomChoice(colors)};
                border-radius: 50%;
                pointer-events: none;
                z-index: 10000;
                left: ${x}px;
                top: ${y}px;
                animation: yuigahamaParticleFloat 2s ease-out forwards;
            `;
            
            document.body.appendChild(particle);
            setTimeout(() => particle.remove(), 2000);
        }
        
        // Toast 提示
        static showToast(message, type = 'info', duration = 3000) {
            const colors = {
                success: 'linear-gradient(45deg, #55a3ff, #ff6b9d)',
                info: 'linear-gradient(45deg, #ff9ff3, #f368e0)',
                warning: 'linear-gradient(45deg, #feca57, #ff6b6b)',
                error: 'linear-gradient(45deg, #ff6b6b, #c44569)'
            };
            
            const toast = document.createElement('div');
            toast.style.cssText = `
                position: fixed;
                top: 20px;
                left: 50%;
                transform: translateX(-50%);
                background: ${colors[type] || colors.info};
                color: white;
                padding: 12px 20px;
                border-radius: 20px;
                box-shadow: 0 4px 12px rgba(255,107,157,0.3);
                z-index: 10001;
                font-family: var(--yuigahama-font-family);
                font-weight: 600;
                animation: yuigahamaToastIn 0.3s ease-out;
                text-align: center;
            `;
            toast.textContent = message;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.style.animation = 'yuigahamaToastOut 0.3s ease-in';
                setTimeout(() => toast.remove(), 300);
            }, duration);
        }
    }
    
    // 全局暴露
    window.YuigahamaUtils = YuigahamaUtils;
}