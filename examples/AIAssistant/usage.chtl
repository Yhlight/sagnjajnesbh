// ========================================
// 🤖 AI助手示例 - CJMOD驱动的智能助手
// ========================================

html {
    head {
        title { text { 🤖 CJMOD AI助手演示 } }
        
        style {
            body {
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                min-height: 100vh;
            }
            
            .ai-container {
                max-width: 1000px;
                margin: 0 auto;
                background: rgba(255,255,255,0.95);
                border-radius: 20px;
                padding: 30px;
                box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            }
            
            .ai-chat {
                height: 500px;
                border: 2px solid #667eea;
                border-radius: 15px;
                overflow-y: auto;
                padding: 20px;
                margin-bottom: 20px;
                background: #f8f9fa;
            }
            
            .ai-message {
                margin-bottom: 15px;
                padding: 12px 18px;
                border-radius: 18px;
                max-width: 80%;
                word-wrap: break-word;
            }
            
            .ai-message.user {
                background: #667eea;
                color: white;
                margin-left: auto;
                text-align: right;
            }
            
            .ai-message.assistant {
                background: #e3f2fd;
                color: #1565c0;
                border-left: 4px solid #2196f3;
            }
            
            .ai-message.system {
                background: #fff3e0;
                color: #ef6c00;
                text-align: center;
                font-style: italic;
            }
            
            .ai-input-area {
                display: flex;
                gap: 15px;
                align-items: center;
            }
            
            .ai-input {
                flex: 1;
                padding: 15px;
                border: 2px solid #667eea;
                border-radius: 25px;
                font-size: 16px;
                outline: none;
            }
            
            .ai-btn {
                padding: 15px 25px;
                background: linear-gradient(45deg, #667eea, #764ba2);
                color: white;
                border: none;
                border-radius: 25px;
                cursor: pointer;
                font-weight: bold;
                transition: all 0.3s ease;
            }
            
            .ai-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            }
            
            .ai-features {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 15px;
                margin-bottom: 20px;
            }
            
            .feature-card {
                background: linear-gradient(45deg, #f093fb, #f5576c);
                color: white;
                padding: 20px;
                border-radius: 15px;
                text-align: center;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .feature-card:hover {
                transform: scale(1.05);
                box-shadow: 0 10px 20px rgba(0,0,0,0.2);
            }
        }
    }
    
    body {
        div {
            class: ai-container;
            
            h1 { 
                text { 🤖 CJMOD AI助手 - 无限智能扩展 }
                style { 
                    text-align: center; 
                    color: #667eea; 
                    margin-bottom: 30px;
                }
            }
            
            // AI功能卡片
            div {
                class: ai-features;
                
                div {
                    class: feature-card;
                    id: nlp-card;
                    text { 🧠 自然语言处理 }
                }
                
                div {
                    class: feature-card;
                    id: vision-card;
                    text { 👁️ 计算机视觉 }
                }
                
                div {
                    class: feature-card;
                    id: speech-card;
                    text { 🗣️ 语音识别 }
                }
                
                div {
                    class: feature-card;
                    id: translate-card;
                    text { 🌍 实时翻译 }
                }
            }
            
            // AI对话区域
            div {
                id: ai-chat;
                class: ai-chat;
            }
            
            // AI输入区域
            div {
                class: ai-input-area;
                
                input {
                    id: ai-input;
                    class: ai-input;
                    type: text;
                    placeholder: 向AI助手提问...支持自然语言、图像分析、语音识别等;
                }
                
                button {
                    id: send-btn;
                    class: ai-btn;
                    text { 🚀 发送 }
                }
                
                button {
                    id: voice-btn;
                    class: ai-btn;
                    text { 🎤 语音 }
                }
                
                button {
                    id: image-btn;
                    class: ai-btn;
                    text { 📷 图像 }
                }
            }
            
            script {
                // ========================================
                // 🤖 使用CJMOD创造的AI语法！
                // ========================================
                
                let aiState = {
                    conversationHistory: [],
                    currentLanguage: 'zh-CN',
                    voiceEnabled: false,
                    imageAnalysisMode: false
                };
                
                // 🧠 自然语言处理
                async function processNaturalLanguage(text) {
                    try {
                        // 🚀 使用CJMOD的自然语言处理能力
                        const analysis = await {{analyzeText}}({
                            text: text,
                            language: aiState.currentLanguage,
                            features: ['sentiment', 'entities', 'intent', 'keywords']
                        });
                        
                        console.log('🧠 NLP分析结果:', analysis);
                        
                        // 根据意图生成回复
                        const response = await {{generateResponse}}({
                            intent: analysis.intent,
                            entities: analysis.entities,
                            sentiment: analysis.sentiment,
                            context: aiState.conversationHistory
                        });
                        
                        return response;
                        
                    } catch (error) {
                        console.error('❌ NLP处理失败:', error);
                        return { text: '抱歉，我现在无法理解您的问题。', confidence: 0.1 };
                    }
                }
                
                // 👁️ 计算机视觉分析
                async function analyzeImage(imageData) {
                    try {
                        // 🚀 使用CJMOD的计算机视觉能力
                        const analysis = await {{analyzeImage}}({
                            imageData: imageData,
                            features: ['objects', 'faces', 'text', 'colors', 'emotions']
                        });
                        
                        console.log('👁️ 图像分析结果:', analysis);
                        
                        let description = '我看到了：';
                        if (analysis.objects.length > 0) {
                            description += analysis.objects.join('、');
                        }
                        if (analysis.faces.length > 0) {
                            description += `，检测到${analysis.faces.length}张人脸`;
                        }
                        if (analysis.text) {
                            description += `，图像中的文字：${analysis.text}`;
                        }
                        
                        return { text: description, confidence: analysis.confidence };
                        
                    } catch (error) {
                        console.error('❌ 图像分析失败:', error);
                        return { text: '抱歉，无法分析这张图像。', confidence: 0.1 };
                    }
                }
                
                // 🗣️ 语音识别
                async function recognizeSpeech(audioData) {
                    try {
                        // 🚀 使用CJMOD的语音识别能力
                        const recognition = await {{recognizeSpeech}}({
                            audioData: audioData,
                            language: aiState.currentLanguage,
                            model: 'advanced'
                        });
                        
                        console.log('🗣️ 语音识别结果:', recognition);
                        
                        return recognition.text;
                        
                    } catch (error) {
                        console.error('❌ 语音识别失败:', error);
                        return '';
                    }
                }
                
                // 🌍 实时翻译
                async function translateText(text, targetLang) {
                    try {
                        // 🚀 使用CJMOD的翻译能力
                        const translation = await {{translateText}}({
                            text: text,
                            from: aiState.currentLanguage,
                            to: targetLang,
                            model: 'neural'
                        });
                        
                        console.log('🌍 翻译结果:', translation);
                        
                        return translation.translatedText;
                        
                    } catch (error) {
                        console.error('❌ 翻译失败:', error);
                        return text;
                    }
                }
                
                // 💬 发送消息给AI
                async function sendToAI(message, type = 'text') {
                    try {
                        addMessage(message, 'user');
                        
                        // 显示AI思考状态
                        const thinkingMsg = addMessage('🤔 AI正在思考...', 'system');
                        
                        let aiResponse;
                        
                        switch(type) {
                            case 'text':
                                aiResponse = await processNaturalLanguage(message);
                                break;
                            case 'image':
                                aiResponse = await analyzeImage(message);
                                break;
                            case 'voice':
                                const recognizedText = await recognizeSpeech(message);
                                aiResponse = await processNaturalLanguage(recognizedText);
                                break;
                            default:
                                aiResponse = { text: '未知的输入类型', confidence: 0.1 };
                        }
                        
                        // 移除思考消息
                        thinkingMsg.remove();
                        
                        // 显示AI回复
                        addMessage('🤖 ' + aiResponse.text, 'assistant');
                        
                        // 更新对话历史
                        aiState.conversationHistory.push({
                            user: message,
                            assistant: aiResponse.text,
                            timestamp: Date.now(),
                            confidence: aiResponse.confidence
                        });
                        
                        // 如果置信度低，提供建议
                        if (aiResponse.confidence < 0.5) {
                            setTimeout(() => {
                                addMessage('💡 我可能没有完全理解您的问题，您可以尝试换个说法。', 'system');
                            }, 1000);
                        }
                        
                    } catch (error) {
                        console.error('❌ AI处理失败:', error);
                        addMessage('❌ 抱歉，AI助手暂时无法回应。', 'system');
                    }
                }
                
                // 添加消息到聊天界面
                function addMessage(content, type) {
                    const chatDiv = {{#ai-chat}};
                    const messageDiv = document.createElement('div');
                    messageDiv->className = 'ai-message ' + type;
                    messageDiv->innerHTML = content;
                    
                    chatDiv->appendChild(messageDiv);
                    chatDiv->scrollTop = chatDiv->scrollHeight;
                    
                    return messageDiv;
                }
                
                // 🎯 事件监听
                {{#send-btn}}->addEventListener('click', async function() {
                    const input = {{#ai-input}};
                    if (input->value.trim()) {
                        await sendToAI(input->value.trim());
                        input->value = '';
                    }
                });
                
                {{#ai-input}}->addEventListener('keypress', async function(e) {
                    if (e.key === 'Enter' && this.value.trim()) {
                        await sendToAI(this.value.trim());
                        this.value = '';
                    }
                });
                
                // 🎤 语音输入
                {{#voice-btn}}->addEventListener('click', async function() {
                    try {
                        // 启动语音录制（简化实现）
                        this.textContent = '🎤 录制中...';
                        this.disabled = true;
                        
                        // 模拟语音数据
                        const mockAudioData = 'mock_audio_data_' + Date.now();
                        
                        setTimeout(async () => {
                            await sendToAI(mockAudioData, 'voice');
                            this.textContent = '🎤 语音';
                            this.disabled = false;
                        }, 2000);
                        
                    } catch (error) {
                        console.error('❌ 语音输入失败:', error);
                        this.textContent = '🎤 语音';
                        this.disabled = false;
                    }
                });
                
                // 📷 图像分析
                {{#image-btn}}->addEventListener('click', async function() {
                    try {
                        // 创建文件输入
                        const fileInput = document.createElement('input');
                        fileInput->type = 'file';
                        fileInput->accept = 'image/*';
                        
                        fileInput->onchange = async function(e) {
                            const file = e.target.files[0];
                            if (file) {
                                const reader = new FileReader();
                                reader->onload = async function(event) {
                                    const imageData = event.target.result;
                                    await sendToAI(imageData, 'image');
                                };
                                reader->readAsDataURL(file);
                            }
                        };
                        
                        fileInput->click();
                        
                    } catch (error) {
                        console.error('❌ 图像输入失败:', error);
                    }
                });
                
                // 🧠 AI功能卡片点击
                {{#nlp-card}}->addEventListener('click', async function() {
                    await sendToAI('展示你的自然语言处理能力');
                });
                
                {{#vision-card}}->addEventListener('click', async function() {
                    addMessage('📷 请点击图像按钮上传图片，我将为您分析图像内容！', 'system');
                });
                
                {{#speech-card}}->addEventListener('click', async function() {
                    addMessage('🗣️ 请点击语音按钮开始语音输入！', 'system');
                });
                
                {{#translate-card}}->addEventListener('click', async function() {
                    const text = prompt('请输入要翻译的文本：');
                    if (text) {
                        const translated = await {{translateText}}({
                            text: text,
                            from: 'zh-CN',
                            to: 'en-US'
                        });
                        addMessage(`🌍 翻译结果：${translated}`, 'assistant');
                    }
                });
                
                // 🎯 初始化AI助手
                async function initAIAssistant() {
                    console.log('🤖 初始化CJMOD AI助手...');
                    
                    // 🚀 使用CJMOD初始化AI模型
                    const initResult = await {{initAIModels}}({
                        nlp: true,
                        vision: true,
                        speech: true,
                        translation: true
                    });
                    
                    console.log('🧠 AI模型加载结果:', initResult);
                    
                    // 显示欢迎消息
                    addMessage('🤖 你好！我是由CJMOD驱动的AI助手。我可以：', 'assistant');
                    addMessage('🧠 理解和分析自然语言', 'assistant');
                    addMessage('👁️ 分析图像内容和识别对象', 'assistant');
                    addMessage('🗣️ 识别语音并转换为文字', 'assistant');
                    addMessage('🌍 实时翻译多种语言', 'assistant');
                    addMessage('💡 请点击上方功能卡片或直接向我提问！', 'system');
                    
                    // 🎵 播放欢迎音效
                    await {{playSound}}({
                        file: 'ai_welcome.wav',
                        volume: 0.5
                    });
                }
                
                // 🎭 添加一些有趣的AI交互
                window.aiCommands = {
                    '/weather': async (location) => {
                        const weather = await {{getWeatherData}}(location || '北京');
                        return `🌤️ ${location || '北京'}的天气：${weather.description}，温度${weather.temperature}°C`;
                    },
                    
                    '/joke': async () => {
                        const joke = await {{generateJoke}}('random');
                        return `😄 ${joke.text}`;
                    },
                    
                    '/code': async (language) => {
                        const code = await {{generateCode}}({
                            language: language || 'javascript',
                            task: 'hello world example'
                        });
                        return `💻 ${language || 'JavaScript'}代码示例：\n\`\`\`\n${code.text}\n\`\`\``;
                    },
                    
                    '/math': async (expression) => {
                        const result = await {{calculateMath}}(expression);
                        return `🔢 计算结果：${expression} = ${result.value}`;
                    },
                    
                    '/help': () => {
                        return `💡 可用命令：
                        /weather [城市] - 查询天气
                        /joke - 讲个笑话
                        /code [语言] - 生成代码示例
                        /math [表达式] - 数学计算
                        /help - 显示帮助`;
                    }
                };
                
                // 处理特殊命令
                async function handleSpecialCommands(message) {
                    for (const [command, handler] of Object.entries(window.aiCommands)) {
                        if (message.startsWith(command)) {
                            const param = message.substring(command.length).trim();
                            const result = await handler(param);
                            return result;
                        }
                    }
                    return null;
                }
                
                // 增强的消息发送
                async function sendMessage(message) {
                    // 检查特殊命令
                    const commandResult = await handleSpecialCommands(message);
                    if (commandResult) {
                        addMessage(commandResult, 'assistant');
                        return;
                    }
                    
                    // 普通AI对话
                    await sendToAI(message);
                }
                
                // 启动AI助手
                initAIAssistant();
                
                console.log('🎉 CJMOD AI助手已启动！');
                console.log('💡 尝试这些命令:', Object.keys(window.aiCommands));
            }
        }
    }
}