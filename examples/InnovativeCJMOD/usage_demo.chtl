// ========================================
// 创新CJMOD使用演示
// 展示基于syntaxAnalys + lambda设计的强大语法
// ========================================

[Import] @CJmod from InnovativeCJMOD

html {
    head {
        title { text { 🚀 创新CJMOD语法演示 } }
        
        style {
            body {
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #667eea, #764ba2);
                font-family: 'Arial', sans-serif;
                min-height: 100vh;
            }
            
            .demo-container {
                max-width: 1000px;
                margin: 0 auto;
                background: white;
                border-radius: 20px;
                padding: 30px;
                box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            }
            
            .demo-section {
                margin-bottom: 40px;
                padding: 25px;
                border: 2px solid #e0e0e0;
                border-radius: 15px;
                background: #fafafa;
            }
            
            .demo-btn {
                padding: 15px 30px;
                margin: 10px;
                background: linear-gradient(45deg, #667eea, #764ba2);
                color: white;
                border: none;
                border-radius: 10px;
                cursor: pointer;
                font-weight: bold;
                font-size: 16px;
                transition: all 0.3s ease;
            }
            
            .demo-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.2);
            }
            
            .particle-container {
                width: 100%;
                height: 300px;
                border: 3px dashed #667eea;
                border-radius: 15px;
                position: relative;
                background: linear-gradient(45deg, #f0f2f5, #e1e8ed);
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 18px;
                color: #666;
                margin: 20px 0;
            }
            
            .form-demo {
                background: white;
                padding: 20px;
                border-radius: 10px;
                border: 1px solid #ddd;
            }
            
            .form-input {
                width: 100%;
                padding: 12px;
                margin: 10px 0;
                border: 2px solid #ddd;
                border-radius: 8px;
                font-size: 16px;
                transition: all 0.3s ease;
            }
            
            .animation-targets {
                display: flex;
                gap: 20px;
                justify-content: center;
                margin: 20px 0;
            }
            
            .anim-box {
                width: 80px;
                height: 80px;
                background: linear-gradient(45deg, #ff6b6b, #feca57);
                border-radius: 10px;
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .ai-chat {
                background: #f8f9fa;
                border: 2px solid #667eea;
                border-radius: 15px;
                padding: 20px;
                margin: 20px 0;
                min-height: 200px;
            }
            
            .ai-input {
                width: 100%;
                padding: 15px;
                border: 2px solid #ddd;
                border-radius: 25px;
                font-size: 16px;
                margin-top: 10px;
            }
        }
    }
    
    body {
        div {
            class: demo-container;
            
            h1 { 
                text { 🚀 创新CJMOD语法演示 }
                style { 
                    text-align: center; 
                    color: #667eea; 
                    margin-bottom: 20px;
                    font-size: 36px;
                }
            }
            
            p {
                text { 基于syntaxAnalys + lambda设计的强大语法扩展系统 }
                style { 
                    text-align: center; 
                    color: #666; 
                    margin-bottom: 40px;
                    font-size: 18px;
                }
            }
            
            // 1. 粒子效果演示
            div {
                class: demo-section;
                
                h3 { 
                    text { 🎆 粒子效果语法 - selector number string }
                    style { color: #667eea; margin-bottom: 15px; }
                }
                
                p { 
                    text { 模式：particleEffect({{选择器}}, 数量, '效果类型') }
                    style { color: #666; font-family: monospace; background: #f0f0f0; padding: 10px; border-radius: 5px; }
                }
                
                div {
                    id: particle-demo;
                    class: particle-container;
                    text { 🎆 点击按钮在这里生成粒子效果 }
                }
                
                button { id: fireworks-btn; class: demo-btn; text { 🎆 烟花效果 } }
                button { id: rain-btn; class: demo-btn; text { 🌧️ 雨滴效果 } }
                button { id: snow-btn; class: demo-btn; text { ❄️ 雪花效果 } }
                button { id: explosion-btn; class: demo-btn; text { 💥 爆炸效果 } }
            }
            
            // 2. 智能表单验证演示
            div {
                class: demo-section;
                
                h3 { 
                    text { ✅ 智能验证语法 - selector ** function }
                    style { color: #667eea; margin-bottom: 15px; }
                }
                
                p { 
                    text { 模式：smartValidate({{表单}}, **复杂配置, 回调函数) }
                    style { color: #666; font-family: monospace; background: #f0f0f0; padding: 10px; border-radius: 5px; }
                }
                
                div {
                    id: form-demo;
                    class: form-demo;
                    
                    input { id: email-input; class: form-input; type: email; placeholder: 输入邮箱地址; }
                    input { id: phone-input; class: form-input; type: tel; placeholder: 输入手机号码; }
                    input { id: password-input; class: form-input; type: password; placeholder: 输入密码(至少8位); }
                    
                    button { id: validate-btn; class: demo-btn; text { ✅ 智能验证 } }
                }
            }
            
            // 3. 动画序列演示
            div {
                class: demo-section;
                
                h3 { 
                    text { 🎬 动画序列语法 - array ** number }
                    style { color: #667eea; margin-bottom: 15px; }
                }
                
                p { 
                    text { 模式：animationSequence([目标数组], **复杂动画配置, 持续时间) }
                    style { color: #666; font-family: monospace; background: #f0f0f0; padding: 10px; border-radius: 5px; }
                }
                
                div {
                    class: animation-targets;
                    
                    div { class: anim-box; text { 1 } }
                    div { class: anim-box; text { 2 } }
                    div { class: anim-box; text { 3 } }
                    div { class: anim-box; text { 4 } }
                    div { class: anim-box; text { 5 } }
                }
                
                button { id: sequence-btn; class: demo-btn; text { 🎬 启动动画序列 } }
                button { id: stagger-btn; class: demo-btn; text { 🌊 波浪动画 } }
            }
            
            // 4. AI对话演示
            div {
                class: demo-section;
                
                h3 { 
                    text { 🤖 AI对话语法 - string ** string }
                    style { color: #667eea; margin-bottom: 15px; }
                }
                
                p { 
                    text { 模式：aiChat('提示词', **AI配置, '模型名称') }
                    style { color: #666; font-family: monospace; background: #f0f0f0; padding: 10px; border-radius: 5px; }
                }
                
                div {
                    id: ai-chat;
                    class: ai-chat;
                    
                    div { id: ai-response; text { 🤖 AI助手准备就绪，请输入您的问题... } }
                }
                
                input { 
                    id: ai-input; 
                    class: ai-input; 
                    placeholder: 向AI助手提问...; 
                }
                
                button { id: ask-gpt; class: demo-btn; text { 🤖 询问GPT } }
                button { id: ask-claude; class: demo-btn; text { 🧠 询问Claude } }
            }
            
            script {
                // ========================================
                // 🚀 使用创新CJMOD语法！
                // 基于syntaxAnalys + lambda的强大设计
                // ========================================
                
                // 🎆 粒子效果语法使用
                {{#fireworks-btn}}->listen({
                    click: function() {
                        // 🚀 使用您设计的语法！
                        // 模式：selector number string
                        particleEffect({{#particle-demo}}, 150, 'fireworks');
                    }
                });
                
                {{#rain-btn}}->listen({
                    click: function() {
                        particleEffect({{#particle-demo}}, 200, 'rain');
                    }
                });
                
                {{#snow-btn}}->listen({
                    click: function() {
                        particleEffect({{#particle-demo}}, 100, 'snow');
                    }
                });
                
                {{#explosion-btn}}->listen({
                    click: function() {
                        particleEffect({{#particle-demo}}, 300, 'explosion');
                    }
                });
                
                // ✅ 智能验证语法使用
                {{#validate-btn}}->listen({
                    click: function() {
                        // 🚀 使用您设计的语法！
                        // 模式：selector ** function
                        smartValidate({{#form-demo}}, **, function(isValid, results) {
                            if (isValid) {
                                toast('✅ 所有字段验证通过！', 'success');
                            } else {
                                toast('❌ 请检查表单字段', 'error');
                            }
                            
                            console.log('📋 验证结果:', results);
                        });
                    }
                });
                
                // 🎬 动画序列语法使用
                {{#sequence-btn}}->listen({
                    click: function() {
                        // 🚀 使用您设计的语法！
                        // 模式：array ** number
                        animationSequence({{.anim-box}}, **, 1500);
                    }
                });
                
                {{#stagger-btn}}->listen({
                    click: function() {
                        // 波浪效果
                        animationSequence({{.anim-box}}, **, 2000);
                    }
                });
                
                // 🤖 AI对话语法使用
                {{#ask-gpt}}->listen({
                    click: async function() {
                        const prompt = {{#ai-input}}->value;
                        if (!prompt.trim()) return;
                        
                        // 🚀 使用您设计的语法！
                        // 模式：string ** string
                        const response = await aiChat(prompt, **, 'gpt');
                        
                        {{#ai-response}}->textContent = '🤖 GPT: ' + response.text;
                        {{#ai-input}}->value = '';
                    }
                });
                
                {{#ask-claude}}->listen({
                    click: async function() {
                        const prompt = {{#ai-input}}->value;
                        if (!prompt.trim()) return;
                        
                        // 🚀 使用您设计的语法！
                        const response = await aiChat(prompt, **, 'claude');
                        
                        {{#ai-response}}->textContent = '🧠 Claude: ' + response.text;
                        {{#ai-input}}->value = '';
                    }
                });
                
                // 🎯 Enter键支持
                {{#ai-input}}->listen({
                    keypress: function(e) {
                        if (e.key === 'Enter') {
                            {{#ask-gpt}}->click();
                        }
                    }
                });
                
                // 🎉 初始化演示
                console.log('🚀 创新CJMOD语法演示初始化完成！');
                console.log('💡 支持的语法模式：');
                console.log('   - selector number string (粒子效果)');
                console.log('   - selector ** function (智能验证)'); 
                console.log('   - array ** number (动画序列)');
                console.log('   - string ** string (AI对话)');
                console.log('🌟 ** 通配符可以处理任意复杂的逻辑！');
                
                // 显示欢迎消息
                setTimeout(() => {
                    toast('🎉 欢迎体验创新CJMOD语法！', 'success');
                }, 1000);
            }
        }
    }
}