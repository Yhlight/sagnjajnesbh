// ========================================
// 实时聊天系统使用示例
// 展示如何在CHTL JS中使用CJMOD扩展
// ========================================

html {
    head {
        title { text { 实时聊天系统 - CJMOD示例 } }
        
        style {
            .chat-container {
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
                font-family: Arial, sans-serif;
            }
            
            .chat-messages {
                height: 400px;
                border: 1px solid #ddd;
                overflow-y: auto;
                padding: 10px;
                margin-bottom: 10px;
                background: #f9f9f9;
            }
            
            .message {
                margin-bottom: 10px;
                padding: 8px;
                border-radius: 5px;
                background: white;
                box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            }
            
            .message.system {
                background: #e3f2fd;
                font-style: italic;
            }
            
            .chat-input {
                display: flex;
                gap: 10px;
            }
            
            .chat-input input {
                flex: 1;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 5px;
            }
            
            .chat-input button {
                padding: 10px 20px;
                background: #2196f3;
                color: white;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }
            
            .user-list {
                position: fixed;
                right: 20px;
                top: 20px;
                width: 200px;
                background: white;
                border: 1px solid #ddd;
                border-radius: 5px;
                padding: 10px;
            }
            
            .stats-panel {
                background: #f5f5f5;
                padding: 10px;
                border-radius: 5px;
                margin-bottom: 20px;
            }
        }
    }
    
    body {
        div {
            class: chat-container;
            
            h1 { text { 🚀 实时聊天系统 - CJMOD强力驱动 } }
            
            // 统计面板
            div {
                id: stats-panel;
                class: stats-panel;
                
                script {
                    // 使用CJMOD扩展的聊天统计功能
                    async function updateStats() {
                        const stats = await {{getChatStats}}();
                        {{#stats-panel}}->innerHTML = `
                            📊 统计信息：
                            消息总数: ${stats.totalMessages} | 
                            在线用户: ${stats.onlineUsers} | 
                            聊天室: ${stats.chatRooms} |
                            运行时间: ${Math.floor(stats.serverUptime / 60)}分钟
                        `;
                    }
                    
                    // 每5秒更新一次统计
                    setInterval(updateStats, 5000);
                    updateStats();
                }
            }
            
            // 聊天消息区域
            div {
                id: chat-messages;
                class: chat-messages;
            }
            
            // 聊天输入区域
            div {
                class: chat-input;
                
                input {
                    id: message-input;
                    type: text;
                    placeholder: 输入消息...按Enter发送;
                }
                
                button {
                    id: send-btn;
                    text { 发送 }
                }
                
                button {
                    id: emoji-btn;
                    text { 😊 }
                }
                
                button {
                    id: encrypt-btn;
                    text { 🔒 }
                }
            }
            
            script {
                // ========================================
                // 使用CJMOD创造的全新CHTL JS语法！
                // ========================================
                
                let currentUserId = null;
                let encryptionEnabled = false;
                
                // 连接到聊天服务器 - 使用CJMOD扩展
                async function initializeChat() {
                    try {
                        // 🚀 使用CJMOD的connectUser功能
                        const userInfo = await {{connectUser}}('{"nickname": "CHTL用户"}');
                        currentUserId = userInfo.userId;
                        
                        console.log('✅ 连接成功:', userInfo);
                        
                        // 加载聊天历史
                        await loadChatHistory();
                        
                        // 启动实时更新
                        startRealTimeUpdates();
                        
                    } catch (error) {
                        console.error('❌ 连接失败:', error);
                    }
                }
                
                // 发送消息 - 支持加密和智能过滤
                async function sendChatMessage(content) {
                    try {
                        let messageContent = content;
                        
                        // 🔒 如果启用加密，使用CJMOD加密功能
                        if (encryptionEnabled) {
                            const encrypted = await {{encryptMessage}}(content);
                            messageContent = encrypted.encrypted;
                            console.log('🔒 消息已加密');
                        }
                        
                        // 🛡️ 智能消息过滤
                        const filtered = await {{filterMessage}}(messageContent);
                        
                        // 📤 发送消息
                        const result = await {{sendMessage}}(filtered.filtered);
                        
                        if (result.error) {
                            throw new Error(result.error);
                        }
                        
                        console.log('✅ 消息发送成功:', result);
                        
                        // 清空输入框
                        {{#message-input}}->value = '';
                        
                        // 刷新消息列表
                        await loadChatHistory();
                        
                    } catch (error) {
                        console.error('❌ 发送失败:', error);
                        alert('发送失败: ' + error.message);
                    }
                }
                
                // 加载聊天历史
                async function loadChatHistory() {
                    try {
                        // 📜 获取聊天历史
                        const history = await {{getChatHistory}}('general');
                        
                        const messagesDiv = {{#chat-messages}};
                        messagesDiv->innerHTML = '';
                        
                        history.messages->forEach(msg => {
                            const messageDiv = document.createElement('div');
                            messageDiv->className = 'message ' + msg.type;
                            
                            let displayContent = msg.content;
                            
                            // 🔓 如果是加密消息，尝试解密
                            if (msg.type === 'encrypted') {
                                try {
                                    const decrypted = await {{decryptMessage}}(msg.content);
                                    displayContent = '🔓 ' + decrypted.decrypted;
                                } catch (e) {
                                    displayContent = '🔒 [加密消息]';
                                }
                            }
                            
                            const timestamp = new Date(msg.timestamp)->toLocaleTimeString();
                            
                            messageDiv->innerHTML = `
                                <strong>${msg.userId}:</strong> 
                                ${displayContent}
                                <small style="color: #666; float: right;">${timestamp}</small>
                            `;
                            
                            messagesDiv->appendChild(messageDiv);
                        });
                        
                        // 滚动到底部
                        messagesDiv->scrollTop = messagesDiv->scrollHeight;
                        
                    } catch (error) {
                        console.error('❌ 加载历史失败:', error);
                    }
                }
                
                // 实时更新
                function startRealTimeUpdates() {
                    setInterval(async () => {
                        await loadChatHistory();
                        await updateOnlineUsers();
                    }, 2000); // 每2秒更新
                }
                
                // 更新在线用户列表
                async function updateOnlineUsers() {
                    try {
                        // 👥 获取在线用户
                        const users = await {{getOnlineUsers}}();
                        
                        // 更新用户列表UI（如果存在）
                        const userListDiv = document.getElementById('user-list');
                        if (userListDiv) {
                            userListDiv->innerHTML = '<h3>在线用户 (' + users.count + ')</h3>';
                            users.users->forEach(user => {
                                userListDiv->innerHTML += `<div>👤 ${user.nickname}</div>`;
                            });
                        }
                        
                    } catch (error) {
                        console.error('❌ 更新用户列表失败:', error);
                    }
                }
                
                // 🤖 聊天机器人互动
                async function askChatBot(question) {
                    try {
                        const response = await {{chatBot}}(question);
                        
                        // 显示机器人回复
                        const messagesDiv = {{#chat-messages}};
                        const botDiv = document.createElement('div');
                        botDiv->className = 'message system';
                        botDiv->innerHTML = `<strong>🤖 聊天助手:</strong> ${response.botReply}`;
                        messagesDiv->appendChild(botDiv);
                        messagesDiv->scrollTop = messagesDiv->scrollHeight;
                        
                    } catch (error) {
                        console.error('❌ 机器人回复失败:', error);
                    }
                }
                
                // 事件监听
                {{#message-input}}->addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && this.value.trim()) {
                        sendChatMessage(this.value.trim());
                    }
                });
                
                {{#send-btn}}->addEventListener('click', function() {
                    const input = {{#message-input}};
                    if (input->value.trim()) {
                        sendChatMessage(input->value.trim());
                    }
                });
                
                {{#emoji-btn}}->addEventListener('click', function() {
                    const emojis = ['😊', '😂', '❤️', '👍', '🎉', '🔥', '💯'];
                    const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];
                    {{#message-input}}->value += randomEmoji;
                });
                
                {{#encrypt-btn}}->addEventListener('click', function() {
                    encryptionEnabled = !encryptionEnabled;
                    this.textContent = encryptionEnabled ? '🔒 已启用' : '🔒 加密';
                    this.style.background = encryptionEnabled ? '#4caf50' : '#2196f3';
                });
                
                // 初始化聊天系统
                initializeChat();
                
                // 添加一些测试命令
                window.testCommands = {
                    '/bot': (msg) => askChatBot(msg.replace('/bot ', '')),
                    '/stats': () => {{getChatStats}}(),
                    '/users': () => {{getOnlineUsers}}(),
                    '/room': () => {{createPrivateRoom}}('{}'),
                    '/encrypt': (msg) => {{encryptMessage}}(msg.replace('/encrypt ', ''))
                };
                
                console.log('🎉 实时聊天系统已启动！');
                console.log('💡 可用命令:', Object.keys(window.testCommands));
            }
        }
        
        // 在线用户列表
        div {
            id: user-list;
            class: user-list;
            
            h3 { text { 在线用户 } }
            div { text { 加载中... } }
        }
    }
}