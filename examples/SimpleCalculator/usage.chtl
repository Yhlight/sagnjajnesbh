// ========================================
// 🧮 简单计算器 - CHTL JS转JavaScript示例
// 展示CHTL JS如何转换成标准JavaScript代码
// ========================================

html {
    head {
        title { text { 🧮 CHTL JS计算器演示 } }
        
        style {
            body {
                margin: 0;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                font-family: 'Arial', sans-serif;
                min-height: 100vh;
            }
            
            .calculator {
                max-width: 400px;
                margin: 0 auto;
                background: white;
                border-radius: 20px;
                padding: 30px;
                box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            }
            
            .display {
                width: 100%;
                height: 80px;
                font-size: 24px;
                text-align: right;
                padding: 15px;
                border: 2px solid #667eea;
                border-radius: 10px;
                margin-bottom: 20px;
                background: #f8f9fa;
            }
            
            .buttons {
                display: grid;
                grid-template-columns: repeat(4, 1fr);
                gap: 15px;
            }
            
            .btn {
                height: 60px;
                border: none;
                border-radius: 10px;
                font-size: 18px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .btn.number {
                background: #e3f2fd;
                color: #1976d2;
            }
            
            .btn.operator {
                background: #667eea;
                color: white;
            }
            
            .btn.equals {
                background: #4caf50;
                color: white;
                grid-column: span 2;
            }
            
            .btn.clear {
                background: #f44336;
                color: white;
            }
            
            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            }
            
            .history {
                margin-top: 20px;
                padding: 15px;
                background: #f5f5f5;
                border-radius: 10px;
                max-height: 200px;
                overflow-y: auto;
            }
        }
    }
    
    body {
        div {
            class: calculator;
            
            h1 { 
                text { 🧮 CHTL JS计算器 }
                style { text-align: center; color: #667eea; margin-bottom: 30px; }
            }
            
            // 显示屏
            input {
                id: display;
                class: display;
                type: text;
                readonly: true;
                value: 0;
            }
            
            // 按钮区域
            div {
                class: buttons;
                
                // 清除按钮
                button { id: clear; class: btn clear; text { C } }
                button { id: backspace; class: btn operator; text { ⌫ } }
                button { id: percent; class: btn operator; text { % } }
                button { id: divide; class: btn operator; text { ÷ } }
                
                // 数字按钮 7-9
                button { id: seven; class: btn number; text { 7 } }
                button { id: eight; class: btn number; text { 8 } }
                button { id: nine; class: btn number; text { 9 } }
                button { id: multiply; class: btn operator; text { × } }
                
                // 数字按钮 4-6
                button { id: four; class: btn number; text { 4 } }
                button { id: five; class: btn number; text { 5 } }
                button { id: six; class: btn number; text { 6 } }
                button { id: subtract; class: btn operator; text { - } }
                
                // 数字按钮 1-3
                button { id: one; class: btn number; text { 1 } }
                button { id: two; class: btn number; text { 2 } }
                button { id: three; class: btn number; text { 3 } }
                button { id: add; class: btn operator; text { + } }
                
                // 底部按钮
                button { id: zero; class: btn number; text { 0 } }
                button { id: decimal; class: btn number; text { . } }
                button { id: equals; class: btn equals; text { = } }
            }
            
            // 计算历史
            div {
                id: history;
                class: history;
                
                h3 { text { 📊 计算历史 } }
                div { id: history-list; text { 暂无计算记录 } }
            }
            
            script {
                // ========================================
                // 🚀 CHTL JS代码 - 将转换成标准JavaScript
                // ========================================
                
                // 计算器状态
                vir calculator = {
                    currentValue: 0,
                    previousValue: 0,
                    operator: null,
                    waitingForOperand: false,
                    history: []
                };
                
                // 🎯 CHTL JS增强选择器 - 转换成document.querySelector
                const display = {{#display}};              // → document.getElementById('display')
                const historyList = {{#history-list}};     // → document.getElementById('history-list')
                
                // 🔢 输入数字 - CHTL JS函数转换成普通函数
                function inputNumber(num) {
                    if (calculator->waitingForOperand) {
                        display->value = String(num);
                        calculator->waitingForOperand = false;
                    } else {
                        display->value = display->value === '0' ? String(num) : display->value + num;
                    }
                    calculator->currentValue = parseFloat(display->value);
                }
                
                // ➕ 输入操作符
                function inputOperator(nextOperator) {
                    const inputValue = parseFloat(display->value);
                    
                    if (calculator->previousValue === null) {
                        calculator->previousValue = inputValue;
                    } else if (calculator->operator) {
                        const currentValue = calculator->currentValue || 0;
                        const newValue = performCalculation();
                        
                        display->value = String(newValue);
                        calculator->currentValue = newValue;
                        calculator->previousValue = newValue;
                    }
                    
                    calculator->waitingForOperand = true;
                    calculator->operator = nextOperator;
                }
                
                // 🧮 执行计算
                function performCalculation() {
                    const prev = calculator->previousValue;
                    const current = calculator->currentValue;
                    const operator = calculator->operator;
                    
                    if (prev === null || current === null || !operator) {
                        return current;
                    }
                    
                    let result;
                    switch (operator) {
                        case '+': result = prev + current; break;
                        case '-': result = prev - current; break;
                        case '×': result = prev * current; break;
                        case '÷': result = current !== 0 ? prev / current : 0; break;
                        case '%': result = prev % current; break;
                        default: return current;
                    }
                    
                    // 📊 添加到历史记录
                    const historyEntry = `${prev} ${operator} ${current} = ${result}`;
                    calculator->history.push(historyEntry);
                    updateHistory();
                    
                    return result;
                }
                
                // 📊 更新历史显示
                function updateHistory() {
                    if (calculator->history.length === 0) {
                        historyList->innerHTML = '暂无计算记录';
                        return;
                    }
                    
                    let historyHTML = '';
                    // 显示最近5条记录
                    const recentHistory = calculator->history.slice(-5);
                    recentHistory->forEach((entry, index) => {
                        historyHTML += `<div style="padding: 5px; ${index === recentHistory.length - 1 ? 'font-weight: bold; color: #667eea;' : ''}">${entry}</div>`;
                    });
                    
                    historyList->innerHTML = historyHTML;
                }
                
                // 🔄 重置计算器
                function resetCalculator() {
                    calculator->currentValue = 0;
                    calculator->previousValue = null;
                    calculator->operator = null;
                    calculator->waitingForOperand = false;
                    display->value = '0';
                }
                
                // ⌫ 退格
                function backspace() {
                    const currentDisplay = display->value;
                    if (currentDisplay.length > 1) {
                        display->value = currentDisplay.slice(0, -1);
                    } else {
                        display->value = '0';
                    }
                    calculator->currentValue = parseFloat(display->value);
                }
                
                // 🎯 CHTL JS事件监听 - 转换成addEventListener
                
                // 数字按钮事件
                {{.number}}->listen({
                    click: function() {
                        const num = this.textContent;
                        inputNumber(num);
                    }
                });
                
                // 操作符按钮事件  
                {{#add}}->listen({ click: () => inputOperator('+') });
                {{#subtract}}->listen({ click: () => inputOperator('-') });
                {{#multiply}}->listen({ click: () => inputOperator('×') });
                {{#divide}}->listen({ click: () => inputOperator('÷') });
                {{#percent}}->listen({ click: () => inputOperator('%') });
                
                // 特殊按钮事件
                {{#equals}}->listen({
                    click: function() {
                        const result = performCalculation();
                        display->value = String(result);
                        calculator->currentValue = result;
                        calculator->previousValue = null;
                        calculator->operator = null;
                        calculator->waitingForOperand = true;
                    }
                });
                
                {{#clear}}->listen({ click: resetCalculator });
                {{#backspace}}->listen({ click: backspace });
                
                {{#decimal}}->listen({
                    click: function() {
                        if (display->value.indexOf('.') === -1) {
                            inputNumber('.');
                        }
                    }
                });
                
                // 🎹 键盘支持
                document->listen({
                    keydown: function(e) {
                        e->preventDefault();
                        
                        if (e.key >= '0' && e.key <= '9') {
                            inputNumber(e.key);
                        } else if (['+', '-', '*', '/', '%'].includes(e.key)) {
                            const operatorMap = {'+': '+', '-': '-', '*': '×', '/': '÷', '%': '%'};
                            inputOperator(operatorMap[e.key]);
                        } else if (e.key === 'Enter' || e.key === '=') {
                            {{#equals}}->click();
                        } else if (e.key === 'Escape' || e.key === 'c' || e.key === 'C') {
                            resetCalculator();
                        } else if (e.key === 'Backspace') {
                            backspace();
                        } else if (e.key === '.') {
                            {{#decimal}}->click();
                        }
                    }
                });
                
                // 🎨 初始化动画
                animate({
                    target: {{.calculator}},
                    duration: 800,
                    begin: { opacity: 0, transform: 'scale(0.8) translateY(50px)' },
                    end: { opacity: 1, transform: 'scale(1) translateY(0px)' },
                    easing: 'ease-out'
                });
                
                // 🎵 按钮点击音效（模拟）
                {{.btn}}->delegate({
                    click: function() {
                        // 简单的点击反馈
                        this.style.transform = 'scale(0.95)';
                        setTimeout(() => {
                            this.style.transform = '';
                        }, 100);
                        
                        // 模拟按键音效
                        console.log('🔊 按键音效: ' + this.textContent);
                    }
                });
                
                console.log('🧮 CHTL JS计算器已启动！');
                console.log('🎹 支持键盘输入：数字、运算符、Enter、Escape、Backspace');
            }
        }
    }
}