// 珂朵莉主题模块主文件
// 世界上最幸福的女孩 - 珂朵莉的专属模块

// 珂朵莉主题变量定义
[Custom] @Var ChthollyTheme {
    primaryColor: "#FFB6C1";     // 珂朵莉粉色
    secondaryColor: "#FFC0CB";   // 温柔粉色
    accentColor: "#FF69B4";      // 强调色
    backgroundColor: "#FFF8DC";   // 温暖背景色
    textColor: "#8B4513";        // 文字色
    borderColor: "#DDA0DD";      // 边框色
    shadowColor: "rgba(255, 182, 193, 0.3)"; // 阴影色
}

[Custom] @Var SakuraColors {
    light: "#FFE4E1";           // 淡樱花色
    medium: "#FFB6C1";          // 中樱花色
    dark: "#FF69B4";            // 深樱花色
    petal: "#FFF0F5";           // 花瓣色
}

[Custom] @Var WarmColors {
    cream: "#FFF8DC";           // 奶油色
    peach: "#FFCCCB";           // 桃色
    coral: "#FF7F50";           // 珊瑚色
    gold: "#FFD700";            // 金色
}

// 手风琴组件
[Custom] @Element Accordion {
    div {
        class: "chtholly-accordion";
        
        div {
            class: "accordion-header";
            onclick: "toggleAccordion(this)";
            text: "${title}";
        }
        
        div {
            class: "accordion-content";
            style: "display: none;";
            text: "${content}";
        }
        
        style { @Style AccordionStyle; }
        
        script {
            function toggleAccordion(header) {
                const content = header.nextElementSibling;
                const isVisible = content.style.display !== 'none';
                
                // 珂朵莉风格的动画效果
                if (isVisible) {
                    content.style.animation = 'chthollyFadeOut 0.3s ease-out forwards';
                    setTimeout(() => content.style.display = 'none', 300);
                } else {
                    content.style.display = 'block';
                    content.style.animation = 'chthollyFadeIn 0.3s ease-in forwards';
                }
                
                // 旋转箭头
                header.classList.toggle('active');
            }
        }
    }
}

[Custom] @Style AccordionStyle {
    .chtholly-accordion {
        border: 2px solid @Var(ChthollyTheme.borderColor);
        border-radius: 12px;
        margin: 10px 0;
        overflow: hidden;
        box-shadow: 0 4px 8px @Var(ChthollyTheme.shadowColor);
        background: linear-gradient(135deg, @Var(ChthollyTheme.backgroundColor), @Var(SakuraColors.light));
    }
    
    .accordion-header {
        background: linear-gradient(90deg, @Var(ChthollyTheme.primaryColor), @Var(ChthollyTheme.secondaryColor));
        color: @Var(ChthollyTheme.textColor);
        padding: 15px 20px;
        cursor: pointer;
        font-weight: bold;
        position: relative;
        transition: all 0.3s ease;
    }
    
    .accordion-header:hover {
        background: linear-gradient(90deg, @Var(ChthollyTheme.secondaryColor), @Var(ChthollyTheme.accentColor));
        transform: translateY(-2px);
    }
    
    .accordion-header::after {
        content: "❀";
        position: absolute;
        right: 20px;
        top: 50%;
        transform: translateY(-50%);
        transition: transform 0.3s ease;
        color: @Var(ChthollyTheme.accentColor);
    }
    
    .accordion-header.active::after {
        transform: translateY(-50%) rotate(180deg);
    }
    
    .accordion-content {
        padding: 20px;
        background: @Var(ChthollyTheme.backgroundColor);
        color: @Var(ChthollyTheme.textColor);
        line-height: 1.6;
    }
    
    @keyframes chthollyFadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    @keyframes chthollyFadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(-10px); }
    }
}

// 四叶窗相册组件
[Custom] @Element CloverAlbum {
    div {
        class: "chtholly-clover-album";
        
        div {
            class: "clover-container";
            
            div {
                class: "clover-leaf clover-leaf-1";
                style: "background-image: url('${image1}');";
            }
            
            div {
                class: "clover-leaf clover-leaf-2";
                style: "background-image: url('${image2}');";
            }
            
            div {
                class: "clover-leaf clover-leaf-3";
                style: "background-image: url('${image3}');";
            }
            
            div {
                class: "clover-leaf clover-leaf-4";
                style: "background-image: url('${image4}');";
            }
            
            div {
                class: "clover-center";
                text: "❀";
            }
        }
        
        style { @Style CloverAlbumStyle; }
        
        script {
            // 珂朵莉风格的四叶窗动画
            const leaves = document.querySelectorAll('.clover-leaf');
            const center = document.querySelector('.clover-center');
            
            center.addEventListener('click', () => {
                leaves.forEach((leaf, index) => {
                    leaf.style.animation = `cloverOpen 0.8s ease-in-out ${index * 0.1}s forwards`;
                });
            });
            
            // 悬停效果
            leaves.forEach(leaf => {
                leaf.addEventListener('mouseenter', () => {
                    leaf.style.transform = 'scale(1.1) rotate(5deg)';
                    leaf.style.filter = 'brightness(1.2)';
                });
                
                leaf.addEventListener('mouseleave', () => {
                    leaf.style.transform = 'scale(1) rotate(0deg)';
                    leaf.style.filter = 'brightness(1)';
                });
            });
        }
    }
}

[Custom] @Style CloverAlbumStyle {
    .chtholly-clover-album {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }
    
    .clover-container {
        position: relative;
        width: 300px;
        height: 300px;
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr 1fr;
        gap: 4px;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: 0 8px 16px @Var(ChthollyTheme.shadowColor);
    }
    
    .clover-leaf {
        background-size: cover;
        background-position: center;
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }
    
    .clover-leaf-1 {
        border-top-left-radius: 100%;
        background: linear-gradient(45deg, @Var(SakuraColors.light), @Var(SakuraColors.medium));
    }
    
    .clover-leaf-2 {
        border-top-right-radius: 100%;
        background: linear-gradient(135deg, @Var(SakuraColors.medium), @Var(SakuraColors.dark));
    }
    
    .clover-leaf-3 {
        border-bottom-left-radius: 100%;
        background: linear-gradient(315deg, @Var(SakuraColors.dark), @Var(SakuraColors.light));
    }
    
    .clover-leaf-4 {
        border-bottom-right-radius: 100%;
        background: linear-gradient(225deg, @Var(SakuraColors.light), @Var(SakuraColors.medium));
    }
    
    .clover-center {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 60px;
        height: 60px;
        background: radial-gradient(circle, @Var(ChthollyTheme.primaryColor), @Var(ChthollyTheme.accentColor));
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        color: white;
        cursor: pointer;
        z-index: 10;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
    }
    
    .clover-center:hover {
        transform: translate(-50%, -50%) scale(1.1);
        box-shadow: 0 6px 12px rgba(0,0,0,0.3);
    }
    
    @keyframes cloverOpen {
        0% { transform: scale(1) rotate(0deg); }
        50% { transform: scale(1.2) rotate(10deg); }
        100% { transform: scale(1.1) rotate(5deg); }
    }
}

// 备忘录组件
[Custom] @Element Memo {
    div {
        class: "chtholly-memo";
        
        div {
            class: "memo-header";
            text: "珂朵莉的备忘录 ❀";
        }
        
        div {
            class: "memo-content";
            contenteditable: "true";
            placeholder: "写下珂朵莉的回忆...";
        }
        
        div {
            class: "memo-footer";
            
            button {
                class: "memo-save-btn";
                text: "保存回忆";
                onclick: "saveMemo()";
            }
            
            button {
                class: "memo-clear-btn";
                text: "清空";
                onclick: "clearMemo()";
            }
        }
        
        style { @Style MemoStyle; }
        
        script {
            function saveMemo() {
                const content = document.querySelector('.memo-content').innerText;
                localStorage.setItem('chtholly_memo', content);
                
                // 珂朵莉风格的保存提示
                showChthollyNotification('回忆已保存在心中 ❀');
            }
            
            function clearMemo() {
                document.querySelector('.memo-content').innerText = '';
                localStorage.removeItem('chtholly_memo');
                showChthollyNotification('回忆已清空...');
            }
            
            function showChthollyNotification(message) {
                const notification = document.createElement('div');
                notification.className = 'chtholly-notification';
                notification.innerText = message;
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.style.animation = 'fadeOut 0.5s ease-out forwards';
                    setTimeout(() => notification.remove(), 500);
                }, 2000);
            }
            
            // 加载保存的内容
            window.addEventListener('load', () => {
                const saved = localStorage.getItem('chtholly_memo');
                if (saved) {
                    document.querySelector('.memo-content').innerText = saved;
                }
            });
        }
    }
}

[Custom] @Style MemoStyle {
    .chtholly-memo {
        max-width: 400px;
        background: linear-gradient(135deg, @Var(ChthollyTheme.backgroundColor), @Var(SakuraColors.light));
        border: 2px solid @Var(ChthollyTheme.borderColor);
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 8px 16px @Var(ChthollyTheme.shadowColor);
        font-family: 'Microsoft YaHei', sans-serif;
    }
    
    .memo-header {
        text-align: center;
        font-size: 18px;
        font-weight: bold;
        color: @Var(ChthollyTheme.accentColor);
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid @Var(ChthollyTheme.borderColor);
    }
    
    .memo-content {
        min-height: 200px;
        padding: 15px;
        border: 1px solid @Var(ChthollyTheme.borderColor);
        border-radius: 8px;
        background: white;
        color: @Var(ChthollyTheme.textColor);
        line-height: 1.6;
        margin-bottom: 15px;
        outline: none;
        transition: border-color 0.3s ease;
    }
    
    .memo-content:focus {
        border-color: @Var(ChthollyTheme.accentColor);
        box-shadow: 0 0 8px @Var(ChthollyTheme.shadowColor);
    }
    
    .memo-footer {
        display: flex;
        gap: 10px;
        justify-content: center;
    }
    
    .memo-save-btn, .memo-clear-btn {
        padding: 8px 16px;
        border: none;
        border-radius: 20px;
        cursor: pointer;
        font-weight: bold;
        transition: all 0.3s ease;
    }
    
    .memo-save-btn {
        background: linear-gradient(45deg, @Var(ChthollyTheme.primaryColor), @Var(ChthollyTheme.accentColor));
        color: white;
    }
    
    .memo-save-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px @Var(ChthollyTheme.shadowColor);
    }
    
    .memo-clear-btn {
        background: linear-gradient(45deg, @Var(WarmColors.cream), @Var(WarmColors.peach));
        color: @Var(ChthollyTheme.textColor);
    }
    
    .memo-clear-btn:hover {
        transform: translateY(-2px);
        background: linear-gradient(45deg, @Var(WarmColors.peach), @Var(WarmColors.coral));
    }
    
    .chtholly-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(45deg, @Var(ChthollyTheme.primaryColor), @Var(ChthollyTheme.accentColor));
        color: white;
        padding: 10px 20px;
        border-radius: 25px;
        box-shadow: 0 4px 8px @Var(ChthollyTheme.shadowColor);
        z-index: 1000;
        animation: fadeIn 0.5s ease-in;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; transform: translateX(100%); }
        to { opacity: 1; transform: translateX(0); }
    }
    
    @keyframes fadeOut {
        from { opacity: 1; transform: translateX(0); }
        to { opacity: 0; transform: translateX(100%); }
    }
}

// 暖色笔记组件
[Custom] @Element WarmNote {
    div {
        class: "chtholly-warm-note";
        
        div {
            class: "note-title";
            contenteditable: "true";
            placeholder: "标题...";
        }
        
        div {
            class: "note-content";
            contenteditable: "true";
            placeholder: "写下温暖的文字...";
        }
        
        div {
            class: "note-tags";
            
            input {
                type: "text";
                class: "tag-input";
                placeholder: "添加标签...";
                onkeypress: "addTag(event)";
            }
            
            div {
                class: "tags-container";
            }
        }
        
        style { @Style WarmNoteStyle; }
        
        script {
            function addTag(event) {
                if (event.key === 'Enter') {
                    const input = event.target;
                    const tagText = input.value.trim();
                    
                    if (tagText) {
                        const tag = document.createElement('span');
                        tag.className = 'note-tag';
                        tag.innerHTML = `${tagText} <span class="tag-remove" onclick="removeTag(this)">×</span>`;
                        
                        document.querySelector('.tags-container').appendChild(tag);
                        input.value = '';
                    }
                }
            }
            
            function removeTag(element) {
                element.parentElement.remove();
            }
            
            // 自动保存功能
            let saveTimeout;
            document.querySelectorAll('[contenteditable]').forEach(element => {
                element.addEventListener('input', () => {
                    clearTimeout(saveTimeout);
                    saveTimeout = setTimeout(autoSave, 1000);
                });
            });
            
            function autoSave() {
                const title = document.querySelector('.note-title').innerText;
                const content = document.querySelector('.note-content').innerText;
                const tags = Array.from(document.querySelectorAll('.note-tag')).map(tag => 
                    tag.innerText.replace('×', '').trim()
                );
                
                localStorage.setItem('chtholly_warm_note', JSON.stringify({
                    title, content, tags, timestamp: Date.now()
                }));
            }
        }
    }
}

[Custom] @Style WarmNoteStyle {
    .chtholly-warm-note {
        max-width: 500px;
        background: linear-gradient(135deg, @Var(WarmColors.cream), @Var(WarmColors.peach));
        border: 2px solid @Var(ChthollyTheme.borderColor);
        border-radius: 20px;
        padding: 25px;
        box-shadow: 0 12px 24px @Var(ChthollyTheme.shadowColor);
        position: relative;
        overflow: hidden;
    }
    
    .chtholly-warm-note::before {
        content: "";
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, @Var(SakuraColors.light) 0%, transparent 70%);
        opacity: 0.3;
        pointer-events: none;
    }
    
    .note-title {
        font-size: 20px;
        font-weight: bold;
        color: @Var(ChthollyTheme.accentColor);
        margin-bottom: 15px;
        padding: 10px;
        border: none;
        outline: none;
        background: transparent;
        border-bottom: 2px solid @Var(ChthollyTheme.borderColor);
    }
    
    .note-title:focus {
        border-bottom-color: @Var(ChthollyTheme.accentColor);
    }
    
    .note-content {
        min-height: 150px;
        padding: 15px;
        border: 1px solid @Var(ChthollyTheme.borderColor);
        border-radius: 10px;
        background: rgba(255, 255, 255, 0.8);
        color: @Var(ChthollyTheme.textColor);
        line-height: 1.8;
        margin-bottom: 15px;
        outline: none;
        transition: all 0.3s ease;
    }
    
    .note-content:focus {
        background: white;
        border-color: @Var(ChthollyTheme.accentColor);
        box-shadow: 0 0 12px @Var(ChthollyTheme.shadowColor);
    }
    
    .note-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        align-items: center;
    }
    
    .tag-input {
        flex: 1;
        min-width: 120px;
        padding: 6px 12px;
        border: 1px solid @Var(ChthollyTheme.borderColor);
        border-radius: 15px;
        outline: none;
        background: white;
        color: @Var(ChthollyTheme.textColor);
    }
    
    .tag-input:focus {
        border-color: @Var(ChthollyTheme.accentColor);
        box-shadow: 0 0 6px @Var(ChthollyTheme.shadowColor);
    }
    
    .note-tag {
        display: inline-flex;
        align-items: center;
        background: linear-gradient(45deg, @Var(ChthollyTheme.primaryColor), @Var(ChthollyTheme.secondaryColor));
        color: white;
        padding: 4px 10px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: bold;
    }
    
    .tag-remove {
        margin-left: 6px;
        cursor: pointer;
        font-weight: bold;
        opacity: 0.7;
        transition: opacity 0.2s ease;
    }
    
    .tag-remove:hover {
        opacity: 1;
    }
}

// 樱花雨特效组件
[Custom] @Element SakuraRain {
    div {
        class: "chtholly-sakura-rain";
        
        style { @Style SakuraRainStyle; }
        
        script {
            class SakuraPetal {
                constructor(container) {
                    this.container = container;
                    this.element = document.createElement('div');
                    this.element.className = 'sakura-petal';
                    this.reset();
                    container.appendChild(this.element);
                }
                
                reset() {
                    this.x = Math.random() * window.innerWidth;
                    this.y = -20;
                    this.rotation = Math.random() * 360;
                    this.speed = Math.random() * 2 + 1;
                    this.rotationSpeed = Math.random() * 4 - 2;
                    this.size = Math.random() * 8 + 4;
                    this.opacity = Math.random() * 0.6 + 0.4;
                    
                    this.element.style.left = this.x + 'px';
                    this.element.style.top = this.y + 'px';
                    this.element.style.transform = `rotate(${this.rotation}deg)`;
                    this.element.style.width = this.size + 'px';
                    this.element.style.height = this.size + 'px';
                    this.element.style.opacity = this.opacity;
                }
                
                update() {
                    this.y += this.speed;
                    this.x += Math.sin(this.y * 0.01) * 0.5;
                    this.rotation += this.rotationSpeed;
                    
                    this.element.style.left = this.x + 'px';
                    this.element.style.top = this.y + 'px';
                    this.element.style.transform = `rotate(${this.rotation}deg)`;
                    
                    if (this.y > window.innerHeight + 20) {
                        this.reset();
                    }
                }
            }
            
            // 创建樱花雨
            const sakuraContainer = document.querySelector('.chtholly-sakura-rain');
            const petals = [];
            
            for (let i = 0; i < 50; i++) {
                petals.push(new SakuraPetal(sakuraContainer));
            }
            
            function animateSakura() {
                petals.forEach(petal => petal.update());
                requestAnimationFrame(animateSakura);
            }
            
            animateSakura();
        }
    }
}

[Custom] @Style SakuraRainStyle {
    .chtholly-sakura-rain {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
        overflow: hidden;
    }
    
    .sakura-petal {
        position: absolute;
        background: radial-gradient(ellipse, @Var(SakuraColors.medium), @Var(SakuraColors.light));
        border-radius: 50% 0 50% 0;
        pointer-events: none;
        animation: sakuraFloat 3s infinite ease-in-out;
    }
    
    .sakura-petal::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
        width: 60%;
        height: 60%;
        background: @Var(SakuraColors.petal);
        border-radius: 50% 0 50% 0;
        opacity: 0.8;
    }
    
    @keyframes sakuraFloat {
        0%, 100% { transform: rotate(0deg) scale(1); }
        25% { transform: rotate(90deg) scale(1.1); }
        50% { transform: rotate(180deg) scale(0.9); }
        75% { transform: rotate(270deg) scale(1.1); }
    }
}

// 鼠标特效组件
[Custom] @Element MouseEffect {
    div {
        class: "chtholly-mouse-effect";
        
        style { @Style MouseEffectStyle; }
        
        script {
            let mouseEffects = [];
            
            document.addEventListener('mousemove', (e) => {
                createMouseEffect(e.clientX, e.clientY);
            });
            
            function createMouseEffect(x, y) {
                const effect = document.createElement('div');
                effect.className = 'mouse-effect-particle';
                effect.style.left = x + 'px';
                effect.style.top = y + 'px';
                
                // 随机樱花图案
                const patterns = ['❀', '✿', '❁', '✾'];
                effect.innerText = patterns[Math.floor(Math.random() * patterns.length)];
                
                document.body.appendChild(effect);
                
                // 动画结束后移除
                setTimeout(() => effect.remove(), 1000);
                
                // 限制特效数量
                mouseEffects.push(effect);
                if (mouseEffects.length > 20) {
                    const old = mouseEffects.shift();
                    if (old && old.parentNode) {
                        old.remove();
                    }
                }
            }
        }
    }
}

[Custom] @Style MouseEffectStyle {
    .mouse-effect-particle {
        position: fixed;
        pointer-events: none;
        color: @Var(ChthollyTheme.accentColor);
        font-size: 16px;
        z-index: 9999;
        animation: mouseEffectFloat 1s ease-out forwards;
    }
    
    @keyframes mouseEffectFloat {
        0% {
            opacity: 1;
            transform: translate(-50%, -50%) scale(0);
        }
        50% {
            opacity: 0.8;
            transform: translate(-50%, -50%) scale(1.2);
        }
        100% {
            opacity: 0;
            transform: translate(-50%, -50%) scale(0.8) translateY(-30px);
        }
    }
}

// 进度条组件
[Custom] @Element ProgressBar {
    div {
        class: "chtholly-progress-bar";
        
        div {
            class: "progress-label";
            text: "${label}";
        }
        
        div {
            class: "progress-container";
            
            div {
                class: "progress-fill";
                style: "width: ${progress}%;";
            }
            
            div {
                class: "progress-text";
                text: "${progress}%";
            }
        }
        
        style { @Style ProgressBarStyle; }
        
        script {
            function updateProgress(newProgress) {
                const fill = document.querySelector('.progress-fill');
                const text = document.querySelector('.progress-text');
                
                // 珂朵莉风格的进度动画
                fill.style.transition = 'width 0.8s cubic-bezier(0.4, 0.0, 0.2, 1)';
                fill.style.width = newProgress + '%';
                text.innerText = newProgress + '%';
                
                // 完成时的特效
                if (newProgress >= 100) {
                    fill.style.background = 'linear-gradient(90deg, #FFD700, #FF69B4)';
                    setTimeout(() => {
                        fill.style.animation = 'progressComplete 0.5s ease-in-out';
                    }, 800);
                }
            }
        }
    }
}

[Custom] @Style ProgressBarStyle {
    .chtholly-progress-bar {
        margin: 15px 0;
    }
    
    .progress-label {
        font-weight: bold;
        color: @Var(ChthollyTheme.accentColor);
        margin-bottom: 8px;
        font-size: 14px;
    }
    
    .progress-container {
        position: relative;
        width: 100%;
        height: 20px;
        background: @Var(ChthollyTheme.backgroundColor);
        border: 2px solid @Var(ChthollyTheme.borderColor);
        border-radius: 25px;
        overflow: hidden;
        box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, @Var(ChthollyTheme.primaryColor), @Var(ChthollyTheme.accentColor));
        border-radius: 23px;
        transition: width 0.3s ease;
        position: relative;
        overflow: hidden;
    }
    
    .progress-fill::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
        animation: progressShine 2s infinite;
    }
    
    .progress-text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 12px;
        font-weight: bold;
        color: @Var(ChthollyTheme.textColor);
        text-shadow: 1px 1px 2px rgba(255,255,255,0.8);
    }
    
    @keyframes progressShine {
        0% { left: -100%; }
        100% { left: 100%; }
    }
    
    @keyframes progressComplete {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }
}