#!/bin/bash

# CHTL Quick Integration Build Script
# Simplified integration build for testing and verification
# Cross-platform quick build and packaging

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"
DIST_DIR="$PROJECT_ROOT/dist-quick"

echo -e "${PURPLE}⚡ CHTL Quick Integration Build${NC}"
echo -e "${BLUE}Project Root: $PROJECT_ROOT${NC}"
echo -e "${BLUE}Distribution: $DIST_DIR${NC}"
echo ""

# Function definitions
print_section() {
    echo -e "${CYAN}=== $1 ===${NC}"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️ $1${NC}"
}

# Quick build
quick_build() {
    print_section "Quick Build CHTL Compiler"
    
    mkdir -p "$PROJECT_ROOT/build"
    cd "$PROJECT_ROOT/build"
    
    print_info "Configuring CMake..."
    cmake .. -DCMAKE_BUILD_TYPE=Release >/dev/null 2>&1
    
    print_info "Building core components..."
    make SimpleTestRunner ComprehensiveTestRunner >/dev/null 2>&1
    
    if [ -f "bin/ComprehensiveTestRunner" ]; then
        print_success "Core compiler built successfully"
    else
        print_error "Core compiler build failed"
        return 1
    fi
}

# Quick test
quick_test() {
    print_section "Quick Functionality Test"
    
    cd "$PROJECT_ROOT/build"
    
    print_info "Running comprehensive tests..."
    ./bin/ComprehensiveTestRunner > "$DIST_DIR/quick_test.log" 2>&1
    
    # Extract test results
    local success_rate=$(grep "成功率:" "$DIST_DIR/quick_test.log" | tail -1 | grep -o '[0-9.]*%')
    local total_tests=$(grep "总测试数:" "$DIST_DIR/quick_test.log" | tail -1 | grep -o '[0-9]*')
    local passed_tests=$(grep "通过:" "$DIST_DIR/quick_test.log" | tail -1 | grep -o '[0-9]*')
    
    print_info "Test Results: $passed_tests/$total_tests passed ($success_rate)"
    
    if [ "$success_rate" = "100.0%" ]; then
        print_success "All tests passed!"
        return 0
    else
        print_info "Test details saved to: $DIST_DIR/quick_test.log"
        return 0
    fi
}

# Quick package modules
quick_package() {
    print_section "Quick Module Packaging"
    
    mkdir -p "$DIST_DIR/packages"
    
    # Package a few sample modules
    print_info "Packaging Chtholly Accordion..."
    "$PROJECT_ROOT/scripts/pack/pack_cmod.sh" -o "$DIST_DIR/packages" \
        "$PROJECT_ROOT/src/Module/Chtholly/CMOD/Accordion" >/dev/null 2>&1
    
    print_info "Packaging Yuigahama MusicPlayer..."
    "$PROJECT_ROOT/scripts/pack/pack_cmod.sh" -o "$DIST_DIR/packages" \
        "$PROJECT_ROOT/src/Module/Yuigahama/CMOD/MusicPlayer" >/dev/null 2>&1
    
    local package_count=$(find "$DIST_DIR/packages" -name "*.cmod" | wc -l)
    print_success "Packaged $package_count CMOD modules"
}

# Generate quick report
generate_quick_report() {
    print_section "Generating Quick Report"
    
    local report_file="$DIST_DIR/QUICK_BUILD_REPORT.md"
    
    cat > "$report_file" << EOF
# CHTL Quick Integration Build Report

**Build Date**: $(date)  
**Platform**: $(uname -s)  
**Build Type**: Quick Integration

## 📊 Build Results

### 🔧 Compiler Build
- Status: $([ -f "$PROJECT_ROOT/build/bin/ComprehensiveTestRunner" ] && echo "✅ Success" || echo "❌ Failed")
- Test Runner: $([ -f "$PROJECT_ROOT/build/bin/ComprehensiveTestRunner" ] && echo "Available" || echo "Missing")

### 🧪 Test Results
$(if [ -f "$DIST_DIR/quick_test.log" ]; then
    echo "- Success Rate: $(grep "成功率:" "$DIST_DIR/quick_test.log" | tail -1 | grep -o '[0-9.]*%')"
    echo "- Total Tests: $(grep "总测试数:" "$DIST_DIR/quick_test.log" | tail -1 | grep -o '[0-9]*')"
    echo "- Passed Tests: $(grep "通过:" "$DIST_DIR/quick_test.log" | tail -1 | grep -o '[0-9]*')"
else
    echo "- Status: Not executed"
fi)

### 📦 Module Packages
- CMOD Packages: $(find "$DIST_DIR/packages" -name "*.cmod" 2>/dev/null | wc -l)
- Package Location: packages/

## 📁 Quick Build Contents

\`\`\`
dist-quick/
├── packages/           # Sample module packages
├── quick_test.log      # Test execution log
└── QUICK_BUILD_REPORT.md
\`\`\`

## ✅ Verification Status

$(if [ -f "$PROJECT_ROOT/build/bin/ComprehensiveTestRunner" ]; then
    echo "✅ CHTL compiler system is functional"
else
    echo "❌ CHTL compiler system needs attention"
fi)

$(if [ "$(find "$DIST_DIR/packages" -name "*.cmod" 2>/dev/null | wc -l)" -gt 0 ]; then
    echo "✅ Module packaging system is working"
else
    echo "❌ Module packaging system needs attention"
fi)

---

*Generated by CHTL Quick Integration Build Script*
EOF

    print_success "Quick report generated"
}

# Main execution
main() {
    mkdir -p "$DIST_DIR"
    
    if quick_build; then
        quick_test
        quick_package
        generate_quick_report
        
        print_section "Quick Build Complete"
        print_success "CHTL quick integration build completed"
        
        echo ""
        print_info "📊 Quick Build Summary:"
        echo "  🔧 Compiler: $([ -f "$PROJECT_ROOT/build/bin/ComprehensiveTestRunner" ] && echo "✅ Built" || echo "❌ Failed")"
        echo "  🧪 Tests: $([ -f "$DIST_DIR/quick_test.log" ] && echo "✅ Executed" || echo "❌ Failed")"
        echo "  📦 Packages: $(find "$DIST_DIR/packages" -name "*.cmod" 2>/dev/null | wc -l) created"
        
        echo ""
        print_info "📁 Results location: $DIST_DIR"
        print_success "🎉 Quick integration build ready!"
        
    else
        print_error "Quick build failed"
        exit 1
    fi
}

# Execute main function
main "$@"