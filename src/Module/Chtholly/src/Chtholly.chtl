// ==========================================
// 珂朵莉模块主文件 - 符合CMOD架构
// 根据CHTL语法文档实现所有UI组件
// ==========================================

// 导入命名空间
[Namespace] Chtholly;

// ==========================================
// 模板变量组 - 主题配置
// ==========================================

[Template] @Var ThemeColors
{
    primaryColor: "#FFB6C1";      // 珂朵莉粉
    secondaryColor: "#FFF0F5";    // 薰衣草雾
    accentColor: "#FF69B4";       // 热粉色
    backgroundColor: "#FFFAF0";    // 花白色
    textColor: "#2F4F4F";         // 暗石板灰
    borderColor: "#DDA0DD";       // 梅花色
}

[Template] @Var DefaultSpacing
{
    small: "8px";
    medium: "16px";
    large: "24px";
    xlarge: "32px";
}

[Template] @Var AnimationTiming
{
    fast: "0.2s";
    normal: "0.3s";
    slow: "0.5s";
    bounce: "cubic-bezier(0.68, -0.55, 0.265, 1.55)";
}

// ==========================================
// 模板样式组 - 基础样式
// ==========================================

[Template] @Style DefaultButton
{
    background: ThemeColors(primaryColor);
    color: ThemeColors(textColor);
    border: 1px solid ThemeColors(borderColor);
    border-radius: DefaultSpacing(small);
    padding: DefaultSpacing(small) DefaultSpacing(medium);
    transition: all AnimationTiming(normal) AnimationTiming(bounce);
    cursor: pointer;
    
    &:hover {
        background: ThemeColors(accentColor);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(255, 105, 180, 0.3);
    }
}

[Template] @Style CardStyle
{
    background: ThemeColors(backgroundColor);
    border: 1px solid ThemeColors(borderColor);
    border-radius: DefaultSpacing(medium);
    padding: DefaultSpacing(large);
    box-shadow: 0 2px 8px rgba(221, 160, 221, 0.2);
    transition: all AnimationTiming(normal);
    
    &:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 24px rgba(221, 160, 221, 0.3);
    }
}

// ==========================================
// 自定义元素组 - UI组件
// ==========================================

// 手风琴组件
[Custom] @Element Accordion : CardStyle
{
    .accordion-header {
        background: ThemeColors(primaryColor);
        padding: DefaultSpacing(medium);
        cursor: pointer;
        border-radius: DefaultSpacing(small);
        margin-bottom: DefaultSpacing(small);
        
        &:hover {
            background: ThemeColors(accentColor);
        }
    }
    
    .accordion-content {
        padding: DefaultSpacing(medium);
        display: none;
        animation: slideDown AnimationTiming(normal) AnimationTiming(bounce);
        
        &.active {
            display: block;
        }
    }
    
    @keyframes slideDown {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
}

// 四叶窗相册组件
[Custom] @Element CloverAlbum : CardStyle
{
    .album-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: DefaultSpacing(medium);
        padding: DefaultSpacing(large);
    }
    
    .album-item {
        position: relative;
        overflow: hidden;
        border-radius: DefaultSpacing(small);
        transition: all AnimationTiming(normal);
        
        &:hover {
            transform: scale(1.05);
        }
        
        img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            transition: all AnimationTiming(slow);
        }
        
        .overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, 
                rgba(255, 182, 193, 0.8), 
                rgba(255, 105, 180, 0.8));
            opacity: 0;
            transition: all AnimationTiming(normal);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }
        
        &:hover .overlay {
            opacity: 1;
        }
    }
}

// 备忘录组件
[Custom] @Element Memo : CardStyle
{
    .memo-header {
        background: linear-gradient(135deg, 
            ThemeColors(primaryColor), 
            ThemeColors(accentColor));
        color: white;
        padding: DefaultSpacing(medium);
        border-radius: DefaultSpacing(small) DefaultSpacing(small) 0 0;
        margin: -DefaultSpacing(large) -DefaultSpacing(large) DefaultSpacing(medium) -DefaultSpacing(large);
    }
    
    .memo-content {
        line-height: 1.6;
        color: ThemeColors(textColor);
    }
    
    .memo-footer {
        margin-top: DefaultSpacing(medium);
        padding-top: DefaultSpacing(medium);
        border-top: 1px solid ThemeColors(borderColor);
        font-size: 0.9em;
        color: #666;
    }
}

// 暖色笔记组件
[Custom] @Element WarmNote : CardStyle
{
    background: linear-gradient(135deg, 
        ThemeColors(backgroundColor), 
        ThemeColors(secondaryColor));
    
    .note-title {
        font-size: 1.2em;
        font-weight: bold;
        color: ThemeColors(accentColor);
        margin-bottom: DefaultSpacing(medium);
        padding-bottom: DefaultSpacing(small);
        border-bottom: 2px solid ThemeColors(primaryColor);
    }
    
    .note-content {
        line-height: 1.8;
        color: ThemeColors(textColor);
    }
    
    .note-tag {
        display: inline-block;
        background: ThemeColors(primaryColor);
        color: white;
        padding: 4px DefaultSpacing(small);
        border-radius: 12px;
        font-size: 0.8em;
        margin: 4px 4px 0 0;
    }
}

// 樱花雨组件
[Custom] @Element SakuraRain
{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000;
    
    .sakura-petal {
        position: absolute;
        width: 10px;
        height: 10px;
        background: ThemeColors(primaryColor);
        border-radius: 50% 0 50% 0;
        animation: fall linear infinite;
        opacity: 0.7;
    }
    
    @keyframes fall {
        0% {
            transform: translateY(-100vh) rotate(0deg);
            opacity: 1;
        }
        100% {
            transform: translateY(100vh) rotate(360deg);
            opacity: 0;
        }
    }
}

// 鼠标特效组件
[Custom] @Element MouseEffect
{
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    
    .mouse-trail {
        position: absolute;
        width: 6px;
        height: 6px;
        background: ThemeColors(accentColor);
        border-radius: 50%;
        animation: trailFade AnimationTiming(slow) ease-out forwards;
    }
    
    @keyframes trailFade {
        0% {
            opacity: 1;
            transform: scale(1);
        }
        100% {
            opacity: 0;
            transform: scale(0);
        }
    }
}

// 视差滚动背景组件
[Custom] @Element ParallaxBg
{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 120%;
    background: linear-gradient(45deg, 
        ThemeColors(backgroundColor), 
        ThemeColors(secondaryColor), 
        ThemeColors(primaryColor));
    z-index: -1;
    
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: 
            radial-gradient(circle at 20% 80%, rgba(255, 182, 193, 0.3) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(255, 105, 180, 0.3) 0%, transparent 50%);
        animation: float AnimationTiming(slow) ease-in-out infinite alternate;
    }
    
    @keyframes float {
        0% { transform: translateY(0px); }
        100% { transform: translateY(-20px); }
    }
}

// 右键菜单组件
[Custom] @Element ContextMenu
{
    position: fixed;
    background: ThemeColors(backgroundColor);
    border: 1px solid ThemeColors(borderColor);
    border-radius: DefaultSpacing(small);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    z-index: 10000;
    min-width: 150px;
    display: none;
    
    .menu-item {
        padding: DefaultSpacing(small) DefaultSpacing(medium);
        cursor: pointer;
        transition: all AnimationTiming(fast);
        
        &:hover {
            background: ThemeColors(primaryColor);
            color: white;
        }
        
        &:first-child {
            border-radius: DefaultSpacing(small) DefaultSpacing(small) 0 0;
        }
        
        &:last-child {
            border-radius: 0 0 DefaultSpacing(small) DefaultSpacing(small);
        }
    }
}

// 进度条组件
[Custom] @Element ProgressBar
{
    width: 100%;
    height: 8px;
    background: ThemeColors(secondaryColor);
    border-radius: 4px;
    overflow: hidden;
    
    .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, 
            ThemeColors(primaryColor), 
            ThemeColors(accentColor));
        border-radius: 4px;
        transition: width AnimationTiming(normal) AnimationTiming(bounce);
        position: relative;
        
        &::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, 
                transparent, 
                rgba(255, 255, 255, 0.3), 
                transparent);
            animation: shine 2s ease-in-out infinite;
        }
    }
    
    @keyframes shine {
        0% { transform: translateX(-100%); }
        100% { transform: translateX(100%); }
    }
}

// ==========================================
// 自定义变量组 - 组件配置
// ==========================================

[Custom] @Var ChthollyColors : ThemeColors
{
    // 扩展主题色彩
    gradientStart: primaryColor;
    gradientEnd: accentColor;
    shadowColor: "rgba(221, 160, 221, 0.3)";
}

[Custom] @Var ChthollyAnimations : AnimationTiming
{
    // 扩展动画配置
    sakuraFall: "8s";
    mouseTrail: "0.8s";
    parallaxFloat: "4s";
}

// ==========================================
// 原始嵌入 - 基础脚本
// ==========================================

[Origin] @Javascript ChthollyBaseScript
{
    // 珂朵莉模块基础JavaScript功能
    class ChthollyCore {
        static init() {
            console.log('珂朵莉模块初始化完成 ❀');
            this.initSakuraRain();
            this.initMouseEffect();
            this.initParallax();
        }
        
        static initSakuraRain() {
            const sakuraContainer = document.querySelector('.sakura-rain');
            if (!sakuraContainer) return;
            
            setInterval(() => {
                const petal = document.createElement('div');
                petal.className = 'sakura-petal';
                petal.style.left = Math.random() * 100 + '%';
                petal.style.animationDuration = (Math.random() * 3 + 5) + 's';
                petal.style.animationDelay = Math.random() * 2 + 's';
                sakuraContainer.appendChild(petal);
                
                setTimeout(() => {
                    petal.remove();
                }, 8000);
            }, 300);
        }
        
        static initMouseEffect() {
            let trails = [];
            document.addEventListener('mousemove', (e) => {
                const trail = document.createElement('div');
                trail.className = 'mouse-trail';
                trail.style.left = e.clientX + 'px';
                trail.style.top = e.clientY + 'px';
                document.body.appendChild(trail);
                
                trails.push(trail);
                if (trails.length > 20) {
                    trails.shift().remove();
                }
                
                setTimeout(() => trail.remove(), 500);
            });
        }
        
        static initParallax() {
            window.addEventListener('scroll', () => {
                const scrolled = window.pageYOffset;
                const parallax = document.querySelector('.parallax-bg');
                if (parallax) {
                    parallax.style.transform = `translateY(${scrolled * 0.5}px)`;
                }
            });
        }
    }
    
    // 自动初始化
    document.addEventListener('DOMContentLoaded', () => {
        ChthollyCore.init();
    });
}