// 按CHTL语法文档：使用[Custom] @Element定义组件，使用局部style和script
[Custom] @Element ChthollyMemo
{
    div
    {
        class: "chtholly-memo";
        
        style
        {
            .chtholly-memo
            {
                max-width: 400px;
                margin: 20px auto;
                background: linear-gradient(135deg, #fff0f5 0%, #ffeef8 100%);
                border-radius: 15px;
                padding: 20px;
                box-shadow: 0 6px 20px rgba(255, 182, 193, 0.25);
                border: 2px solid #ffb6c1;
            }
            
            .memo-header
            {
                text-align: center;
                margin-bottom: 20px;
                color: #8b4367;
                font-weight: 600;
                font-size: 18px;
            }
            
            .memo-input
            {
                width: 100%;
                padding: 12px;
                border: 2px solid #ffc0cb;
                border-radius: 8px;
                background: rgba(255, 255, 255, 0.9);
                color: #5a5a5a;
                font-size: 14px;
                margin-bottom: 15px;
                transition: border-color 0.3s ease;
                resize: vertical;
                min-height: 80px;
            }
            
            &:focus .memo-input
            {
                border-color: #ff69b4;
                outline: none;
                box-shadow: 0 0 0 3px rgba(255, 105, 180, 0.1);
            }
            
            .memo-buttons
            {
                display: flex;
                gap: 10px;
                justify-content: center;
                margin-bottom: 20px;
            }
            
            .memo-btn
            {
                padding: 8px 16px;
                border: none;
                border-radius: 20px;
                background: linear-gradient(45deg, #ffb6c1, #ffc0cb);
                color: #8b4367;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 2px 8px rgba(255, 182, 193, 0.3);
            }
            
            &:hover .memo-btn
            {
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(255, 182, 193, 0.5);
            }
            
            .memo-list
            {
                max-height: 300px;
                overflow-y: auto;
            }
            
            .memo-item
            {
                background: rgba(255, 255, 255, 0.8);
                border-radius: 8px;
                padding: 12px;
                margin-bottom: 10px;
                border-left: 4px solid #ffb6c1;
                transition: all 0.3s ease;
                position: relative;
            }
            
            &:hover .memo-item
            {
                background: rgba(255, 255, 255, 1);
                transform: translateX(5px);
                box-shadow: 0 2px 10px rgba(255, 182, 193, 0.2);
            }
            
            .memo-text
            {
                color: #5a5a5a;
                line-height: 1.5;
                margin-bottom: 8px;
            }
            
            .memo-time
            {
                font-size: 12px;
                color: #999;
                text-align: right;
            }
            
            .memo-delete
            {
                position: absolute;
                top: 8px;
                right: 8px;
                background: #ff6b8a;
                color: white;
                border: none;
                border-radius: 50%;
                width: 20px;
                height: 20px;
                cursor: pointer;
                font-size: 12px;
                display: none;
                align-items: center;
                justify-content: center;
            }
            
            &:hover .memo-delete
            {
                display: flex;
            }
        }
        
        script
        {
            // 按CHTL语法文档：使用虚对象管理备忘录功能
            vir memoController = iNeverAway({
                Add: function() {
                    const input = {{.memo-input}};
                    const text = input.value.trim();
                    
                    if (text) {
                        this.createMemoItem(text);
                        input.value = '';
                        input.focus();
                    }
                },
                
                Delete: function(memoId) {
                    const item = {{#memo-}} + memoId;
                    if (item) {
                        item.style.animation = 'fadeOut 0.3s ease-out forwards';
                        setTimeout(() => item.remove(), 300);
                    }
                },
                
                createMemoItem: function(text) {
                    const memoId = 'memo-' + Date.now();
                    const now = new Date().toLocaleString('zh-CN');
                    
                    const item = document.createElement('div');
                    item.className = 'memo-item';
                    item.id = memoId;
                    item.innerHTML = `
                        <div class="memo-text">${text}</div>
                        <div class="memo-time">${now}</div>
                        <button class="memo-delete" onclick="memoController.Delete('${memoId}')">×</button>
                    `;
                    
                    {{.memo-list}}.appendChild(item);
                }
            });
            
            // 添加按钮事件
            {{.add-memo}}->listen({
                click: function() {
                    memoController->Add();
                }
            });
            
            // 回车键添加
            {{.memo-input}}->listen({
                keydown: function(event) {
                    if (event.key === 'Enter' && !event.shiftKey) {
                        event.preventDefault();
                        memoController->Add();
                    }
                }
            });
            
            // 清空按钮
            {{.clear-memo}}->listen({
                click: function() {
                    if (confirm('确定要清空所有备忘录吗？')) {
                        {{.memo-list}}.innerHTML = '';
                    }
                }
            });
        }
        
        div
        {
            class: "memo-header";
            text { "珂朵莉的备忘录" }
        }
        
        textarea
        {
            class: "memo-input";
            placeholder: "记录你的美好回忆...";
        }
        
        div
        {
            class: "memo-buttons";
            
            button
            {
                class: "memo-btn add-memo";
                text { "添加回忆" }
            }
            
            button
            {
                class: "memo-btn clear-memo";
                text { "清空" }
            }
        }
        
        div
        {
            class: "memo-list";
            
            // 示例备忘录项
            div
            {
                class: "memo-item";
                
                div
                {
                    class: "memo-text";
                    text { "今天见到了最美的樱花，就像珂朵莉的笑容一样绚烂..." }
                }
                
                div
                {
                    class: "memo-time";
                    text { "2024-01-01 12:00:00" }
                }
            }
        }
    }
}

// 按CHTL语法文档：定义相关的自定义样式组
[Custom] @Style ChthollyMemoStyle
{
    background-color,
    border-color,
    text-color;
    
    border-radius: 15px;
    padding: 20px;
    font-family: "Segoe UI", sans-serif;
    transition: all 0.3s ease;
}