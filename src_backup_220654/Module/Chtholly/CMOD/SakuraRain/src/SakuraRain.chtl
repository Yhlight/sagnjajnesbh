// 按CHTL语法文档：使用[Custom] @Element定义组件，使用局部style和script
[Custom] @Element ChthollysakuraRain
{
    div
    {
        class: "chtholly-sakura-rain";
        
        style
        {
            .chtholly-sakura-rain
            {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                pointer-events: none;
                z-index: 1000;
                overflow: hidden;
            }
            
            .sakura-petal
            {
                position: absolute;
                width: 12px;
                height: 12px;
                background: radial-gradient(circle, #ffb6c1 0%, #ffc0cb 50%, #ff91a4 100%);
                border-radius: 50% 10% 50% 10%;
                opacity: 0.8;
                animation: sakuraFall linear infinite;
                transform-origin: center;
            }
            
            .sakura-petal::before
            {
                content: '';
                position: absolute;
                top: -2px;
                left: -2px;
                width: 8px;
                height: 8px;
                background: radial-gradient(circle, #ffffff 0%, #ffb6c1 100%);
                border-radius: 50% 10% 50% 10%;
                transform: rotate(45deg);
            }
            
            &.large .sakura-petal
            {
                width: 16px;
                height: 16px;
            }
            
            &.small .sakura-petal
            {
                width: 8px;
                height: 8px;
            }
            
            @keyframes sakuraFall
            {
                0% {
                    transform: translateY(-100vh) rotate(0deg);
                    opacity: 0;
                }
                10% {
                    opacity: 0.8;
                }
                90% {
                    opacity: 0.8;
                }
                100% {
                    transform: translateY(100vh) rotate(360deg);
                    opacity: 0;
                }
            }
            
            @keyframes sakuraSwing
            {
                0%, 100% {
                    transform: translateX(0);
                }
                25% {
                    transform: translateX(-10px);
                }
                75% {
                    transform: translateX(10px);
                }
            }
        }
        
        script
        {
            // 按CHTL语法文档：使用animate系统和虚对象管理樱花雨
            vir sakuraController = iNeverAway({
                Start: function() {
                    this.isActive = true;
                    this.createPetals();
                },
                
                Stop: function() {
                    this.isActive = false;
                    {{.sakura-petal}}.forEach(petal => petal.remove());
                },
                
                createPetals: function() {
                    if (!this.isActive) return;
                    
                    // 创建樱花花瓣
                    for (let i = 0; i < 3; i++) {
                        setTimeout(() => {
                            if (this.isActive) {
                                this.createSinglePetal();
                            }
                        }, i * 200);
                    }
                    
                    // 持续创建
                    setTimeout(() => {
                        if (this.isActive) {
                            this.createPetals();
                        }
                    }, 1000);
                },
                
                createSinglePetal: function() {
                    const petal = document.createElement('div');
                    petal.className = 'sakura-petal';
                    
                    // 随机位置和大小
                    const leftPos = Math.random() * 100;
                    const size = Math.random() > 0.7 ? 'large' : (Math.random() > 0.3 ? 'normal' : 'small');
                    const duration = 8 + Math.random() * 4; // 8-12秒
                    const delay = Math.random() * 2; // 0-2秒延迟
                    
                    petal.style.left = leftPos + '%';
                    petal.style.animationDuration = duration + 's';
                    petal.style.animationDelay = delay + 's';
                    
                    if (size !== 'normal') {
                        petal.classList.add(size);
                    }
                    
                    // 添加摆动效果
                    if (Math.random() > 0.5) {
                        petal.style.animation += ', sakuraSwing 3s ease-in-out infinite';
                    }
                    
                    {{.chtholly-sakura-rain}}.appendChild(petal);
                    
                    // 自动清理
                    setTimeout(() => {
                        if (petal.parentNode) {
                            petal.remove();
                        }
                    }, (duration + delay + 1) * 1000);
                }
            });
            
            // 自动启动樱花雨
            {{document}}->listen({
                DOMContentLoaded: function() {
                    sakuraController->Start();
                }
            });
            
            // 页面可见性变化时控制樱花雨
            {{document}}->listen({
                visibilitychange: function() {
                    if (document.hidden) {
                        sakuraController->Stop();
                    } else {
                        sakuraController->Start();
                    }
                }
            });
        }
    }
}

// 按CHTL语法文档：定义相关的自定义样式组
[Custom] @Style ChthollysakuraRainStyle
{
    petal-color,
    petal-size,
    animation-duration;
    
    position: fixed;
    pointer-events: none;
    z-index: 1000;
}