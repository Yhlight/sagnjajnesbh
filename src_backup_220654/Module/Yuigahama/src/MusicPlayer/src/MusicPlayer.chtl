// 按CHTL语法文档：使用[Custom] @Element定义组件，使用局部style和script
[Custom] @Element YuigahamaMusicPlayer
{
    div
    {
        class: "yuigahama-music-player";
        
        style
        {
            .yuigahama-music-player
            {
                max-width: 400px;
                margin: 20px auto;
                background: linear-gradient(135deg, #fff8e1 0%, #ffe0b2 100%);
                border-radius: 20px;
                padding: 25px;
                box-shadow: 0 8px 32px rgba(255, 152, 0, 0.15);
                border: 2px solid #ffcc02;
                font-family: "Segoe UI", sans-serif;
            }
            
            .player-header
            {
                text-align: center;
                margin-bottom: 20px;
                color: #e65100;
                font-weight: 700;
                font-size: 18px;
                text-shadow: 0 2px 4px rgba(230, 81, 0, 0.1);
            }
            
            .album-art
            {
                width: 200px;
                height: 200px;
                margin: 0 auto 20px;
                border-radius: 15px;
                background: linear-gradient(45deg, #ffb74d, #ffa726);
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
                font-size: 48px;
                box-shadow: 0 6px 20px rgba(255, 152, 0, 0.3);
                transition: transform 0.3s ease;
            }
            
            &:hover .album-art
            {
                transform: scale(1.05) rotate(2deg);
            }
            
            .track-info
            {
                text-align: center;
                margin-bottom: 20px;
            }
            
            .track-title
            {
                font-size: 16px;
                font-weight: 600;
                color: #bf360c;
                margin-bottom: 5px;
            }
            
            .track-artist
            {
                font-size: 14px;
                color: #f57c00;
                opacity: 0.8;
            }
            
            .progress-container
            {
                margin-bottom: 20px;
                padding: 0 10px;
            }
            
            .progress-bar
            {
                width: 100%;
                height: 6px;
                background: rgba(255, 152, 0, 0.2);
                border-radius: 3px;
                cursor: pointer;
                overflow: hidden;
            }
            
            .progress-fill
            {
                height: 100%;
                background: linear-gradient(90deg, #ff9800, #ffc107);
                border-radius: 3px;
                width: 0%;
                transition: width 0.1s ease;
            }
            
            .time-info
            {
                display: flex;
                justify-content: space-between;
                font-size: 12px;
                color: #f57c00;
                margin-top: 5px;
            }
            
            .controls
            {
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 15px;
            }
            
            .control-btn
            {
                width: 48px;
                height: 48px;
                border: none;
                border-radius: 50%;
                background: linear-gradient(45deg, #ff9800, #ffc107);
                color: white;
                font-size: 18px;
                cursor: pointer;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                justify-content: center;
                box-shadow: 0 4px 12px rgba(255, 152, 0, 0.3);
            }
            
            .control-btn.play
            {
                width: 60px;
                height: 60px;
                font-size: 24px;
                background: linear-gradient(45deg, #ff6f00, #ff8f00);
            }
            
            &:hover .control-btn
            {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(255, 152, 0, 0.4);
            }
            
            &:active .control-btn
            {
                transform: translateY(0);
            }
            
            .volume-container
            {
                display: flex;
                align-items: center;
                gap: 10px;
                margin-top: 15px;
                padding: 0 10px;
            }
            
            .volume-icon
            {
                color: #f57c00;
                font-size: 16px;
            }
            
            .volume-slider
            {
                flex: 1;
                height: 4px;
                background: rgba(255, 152, 0, 0.2);
                border-radius: 2px;
                cursor: pointer;
                position: relative;
            }
            
            .volume-fill
            {
                height: 100%;
                background: linear-gradient(90deg, #ff9800, #ffc107);
                border-radius: 2px;
                width: 70%;
                transition: width 0.1s ease;
            }
        }
        
        script
        {
            // 按CHTL语法文档：使用虚对象和增强选择器管理音乐播放器
            vir musicController = iNeverAway({
                Play: function() {
                    console.log('🎵 由比滨结衣：开始播放音乐');
                    {{.control-btn.play}}.innerHTML = '⏸️';
                    {{.album-art}}.style.animation = 'rotate 10s linear infinite';
                    this.isPlaying = true;
                    this.updateProgress();
                },
                
                Pause: function() {
                    console.log('⏸️ 由比滨结衣：暂停音乐');
                    {{.control-btn.play}}.innerHTML = '▶️';
                    {{.album-art}}.style.animation = 'none';
                    this.isPlaying = false;
                },
                
                Previous: function() {
                    console.log('⏮️ 由比滨结衣：上一首');
                    this.currentTime = 0;
                    this.updateDisplay();
                },
                
                Next: function() {
                    console.log('⏭️ 由比滨结衣：下一首');
                    this.currentTime = 0;
                    this.updateDisplay();
                },
                
                updateProgress: function() {
                    if (!this.isPlaying) return;
                    
                    this.currentTime += 0.1;
                    if (this.currentTime >= this.duration) {
                        this.currentTime = this.duration;
                        this.Pause();
                    }
                    
                    const progress = (this.currentTime / this.duration) * 100;
                    {{.progress-fill}}.style.width = progress + '%';
                    
                    this.updateTimeDisplay();
                    
                    if (this.isPlaying) {
                        setTimeout(() => this.updateProgress(), 100);
                    }
                },
                
                updateTimeDisplay: function() {
                    const current = this.formatTime(this.currentTime);
                    const total = this.formatTime(this.duration);
                    {{.current-time}}.textContent = current;
                    {{.total-time}}.textContent = total;
                },
                
                formatTime: function(seconds) {
                    const mins = Math.floor(seconds / 60);
                    const secs = Math.floor(seconds % 60);
                    return mins + ':' + (secs < 10 ? '0' : '') + secs;
                },
                
                setVolume: function(volume) {
                    this.volume = Math.max(0, Math.min(100, volume));
                    {{.volume-fill}}.style.width = this.volume + '%';
                    console.log('🔊 音量设置为:', this.volume + '%');
                }
            });
            
            // 初始化播放器状态
            musicController.isPlaying = false;
            musicController.currentTime = 0;
            musicController.duration = 180; // 3分钟示例
            musicController.volume = 70;
            
            // 播放/暂停按钮
            {{.control-btn.play}}->listen({
                click: function() {
                    if (musicController.isPlaying) {
                        musicController->Pause();
                    } else {
                        musicController->Play();
                    }
                }
            });
            
            // 上一首按钮
            {{.control-btn.prev}}->listen({
                click: function() {
                    musicController->Previous();
                }
            });
            
            // 下一首按钮
            {{.control-btn.next}}->listen({
                click: function() {
                    musicController->Next();
                }
            });
            
            // 进度条点击
            {{.progress-bar}}->listen({
                click: function(event) {
                    const rect = this.getBoundingClientRect();
                    const x = event.clientX - rect.left;
                    const percentage = x / rect.width;
                    musicController.currentTime = percentage * musicController.duration;
                    musicController.updateDisplay();
                }
            });
            
            // 音量控制
            {{.volume-slider}}->listen({
                click: function(event) {
                    const rect = this.getBoundingClientRect();
                    const x = event.clientX - rect.left;
                    const volume = (x / rect.width) * 100;
                    musicController->setVolume(volume);
                }
            });
            
            // 初始化显示
            {{document}}->listen({
                DOMContentLoaded: function() {
                    musicController.updateTimeDisplay();
                    musicController->setVolume(70);
                }
            });
        }
        
        div
        {
            class: "player-header";
            text { "由比滨结衣的音乐盒" }
        }
        
        div
        {
            class: "album-art";
            text { "🎵" }
        }
        
        div
        {
            class: "track-info";
            
            div
            {
                class: "track-title";
                text { "温暖的午后" }
            }
            
            div
            {
                class: "track-artist";
                text { "由比滨结衣" }
            }
        }
        
        div
        {
            class: "progress-container";
            
            div
            {
                class: "progress-bar";
                
                div
                {
                    class: "progress-fill";
                }
            }
            
            div
            {
                class: "time-info";
                
                span
                {
                    class: "current-time";
                    text { "0:00" }
                }
                
                span
                {
                    class: "total-time";
                    text { "3:00" }
                }
            }
        }
        
        div
        {
            class: "controls";
            
            button
            {
                class: "control-btn prev";
                text { "⏮️" }
            }
            
            button
            {
                class: "control-btn play";
                text { "▶️" }
            }
            
            button
            {
                class: "control-btn next";
                text { "⏭️" }
            }
        }
        
        div
        {
            class: "volume-container";
            
            span
            {
                class: "volume-icon";
                text { "🔊" }
            }
            
            div
            {
                class: "volume-slider";
                
                div
                {
                    class: "volume-fill";
                }
            }
        }
    }
}

// 按CHTL语法文档：定义相关的自定义样式组和变量组
[Custom] @Style YuigahamaMusicPlayerStyle
{
    primary-color,
    secondary-color,
    accent-color;
    
    border-radius: 20px;
    font-family: "Segoe UI", sans-serif;
    transition: all 0.3s ease;
}

[Custom] @Var YuigahamaMusicTheme
{
    primaryColor: "#ff9800";
    secondaryColor: "#ffc107";
    accentColor: "#e65100";
    backgroundColor: "#fff8e1";
    textColor: "#bf360c";
}