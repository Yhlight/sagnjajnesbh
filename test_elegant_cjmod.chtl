// ==========================================
// 优雅CJMOD API 和 珂朵莉模块测试文件
// 验证所有功能是否按照CHTL语法文档正确实现
// ==========================================

// 导入珂朵莉模块
[Import] @Chtl from Chtholly;
[Import] @CJmod from Chtholly.ChthollyJS;

// 使用珂朵莉命名空间
[Namespace] Chtholly;

html {
    head {
        title { "珂朵莉模块测试 - 世界上最幸福的女孩" }
        
        style {
            body {
                font-family: "Comic Sans MS", cursive;
                background: ThemeColors(backgroundColor);
                color: ThemeColors(textColor);
                margin: 0;
                padding: DefaultSpacing(large);
            }
        }
    }
    
    body {
        // 使用珂朵莉模块的UI组件
        
        // 标题区域
        div {
            style {
                text-align: center;
                margin-bottom: DefaultSpacing(xlarge);
            }
            
            h1 { "珂朵莉模块功能测试 ❀" }
            p { "验证CMOD + CJMOD架构的完整实现" }
        }
        
        // 手风琴组件测试
        Accordion {
            data-title: "手风琴组件测试";
            
            div {
                class: "accordion-header";
                "点击展开珂朵莉的回忆"
            }
            
            div {
                class: "accordion-content";
                p { "这里是珂朵莉美好回忆的内容..." }
                p { "世界上最幸福的女孩 ❀" }
            }
        }
        
        // 四叶窗相册测试
        CloverAlbum {
            div {
                class: "album-container";
                
                div {
                    class: "album-item";
                    img { src: "chtholly1.jpg"; alt: "珂朵莉的笑容"; }
                    div { class: "overlay"; "珂朵莉的笑容" }
                }
                
                div {
                    class: "album-item";
                    img { src: "chtholly2.jpg"; alt: "珂朵莉的回忆"; }
                    div { class: "overlay"; "珂朵莉的回忆" }
                }
            }
        }
        
        // 备忘录组件测试
        Memo {
            div { class: "memo-header"; "珂朵莉的备忘录" }
            div { 
                class: "memo-content"; 
                "记录下珂朵莉每一个美好的瞬间，永远不会忘记。"
            }
            div { class: "memo-footer"; "创建时间：永远" }
        }
        
        // 暖色笔记测试
        WarmNote {
            div { class: "note-title"; "珂朵莉的温暖笔记" }
            div { 
                class: "note-content"; 
                "珂朵莉是世界上最幸福的女孩，她的笑容能够温暖每一个人的心。"
            }
            span { class: "note-tag"; "幸福" }
            span { class: "note-tag"; "温暖" }
            span { class: "note-tag"; "珂朵莉" }
        }
        
        // 进度条测试
        ProgressBar {
            div { 
                class: "progress-fill"; 
                style: "width: 75%;";
            }
        }
        
        // 樱花雨效果
        SakuraRain {}
        
        // 鼠标特效
        MouseEffect {}
        
        // 视差背景
        ParallaxBg {}
        
        // 测试按钮区域
        div {
            style {
                margin-top: DefaultSpacing(xlarge);
                text-align: center;
            }
            
            // 使用模板按钮样式
            button : DefaultButton {
                onclick: "testPrintMylove()";
                "测试 printMylove 功能"
            }
            
            button : DefaultButton {
                onclick: "testINeverAway()";
                style { margin-left: DefaultSpacing(medium); }
                "测试 iNeverAway 功能"
            }
        }
        
        // CHTL JS 脚本块 - 测试CJMOD扩展
        script {
            // ==========================================
            // printMylove 功能测试
            // ==========================================
            
            function testPrintMylove() {
                console.log("测试 printMylove 功能");
                
                // 使用新的优雅CJMOD API
                printMylove({
                    url: "chtholly.jpg",
                    mode: "ASCII",
                    width: "400px",
                    height: "300px",
                    scale: 1.5
                });
            }
            
            // ==========================================
            // iNeverAway 功能测试 - 支持自定义键
            // ==========================================
            
            function testINeverAway() {
                console.log("测试 iNeverAway 任意自定义键功能");
                
                // 根据CHTL语法文档第1485-1520行的要求
                // iNeverAway允许开发者定义任意键，而不是使用固定的键
                // 虚对象(vir)是CHTL JS原生功能，不是CJMOD创造的
                
                vir ChthollyPromise = iNeverAway({
                    // 任意自定义键名 + 可选状态
                    MyPromise<Happy>: function(message, duration) {
                        console.log("珂朵莉的快乐承诺: " + message);
                        return new Promise((resolve) => {
                            setTimeout(() => {
                                console.log("快乐承诺完成: " + message);
                                resolve(message);
                            }, duration * 1000);
                        });
                    },
                    
                    MyPromise<Sad>: function(message, duration) {
                        console.log("珂朵莉的忧伤承诺: " + message);
                        return new Promise((resolve) => {
                            setTimeout(() => {
                                console.log("忧伤承诺完成: " + message);
                                console.log("珂朵莉永远在大家心中 ❀");
                                resolve(message);
                            }, duration * 1000);
                        });
                    },
                    
                    // 自定义键：ChthollyAction - 无状态
                    ChthollyAction: function(action) {
                        console.log("珂朵莉执行动作: " + action);
                        return "动作完成: " + action;
                    },
                    
                    // 自定义键：GameEvent - 带状态
                    GameEvent<Start>: function() {
                        console.log("游戏开始！珂朵莉准备好了！");
                        return "游戏已开始";
                    },
                    
                    GameEvent<End>: function() {
                        console.log("游戏结束！珂朵莉玩得很开心！");
                        return "游戏已结束";
                    },
                    
                    // 自定义键：UserData - 无状态对象
                    UserData: {
                        name: "珂朵莉",
                        age: "永远17岁",
                        motto: "世界上最幸福的女孩",
                        
                        introduce: function() {
                            console.log("大家好，我是" + this.name + "，" + this.motto + "！");
                        }
                    }
                });
                
                // 测试任意自定义键的使用
                // 注意：虚对象本身不存在，最终转变成相对应的函数的引用
                
                // 使用带状态的自定义键
                ChthollyPromise.MyPromise.Happy("我会永远陪伴大家", 3);
                ChthollyPromise.MyPromise.Sad("即使忧伤也不会离开", 2);
                
                // 使用无状态的自定义键
                console.log(ChthollyPromise.ChthollyAction("微笑"));
                
                // 使用游戏事件
                ChthollyPromise.GameEvent.Start();
                setTimeout(() => {
                    ChthollyPromise.GameEvent.End();
                }, 1000);
                
                // 访问用户数据
                console.log("用户名:", ChthollyPromise.UserData.name);
                console.log("座右铭:", ChthollyPromise.UserData.motto);
                ChthollyPromise.UserData.introduce();
                
                console.log("iNeverAway支持完全自由的自定义键定义！");
            }
            
            // ==========================================
            // 珂朵莉模块特色功能测试
            // ==========================================
            
            function testChthollyFeatures() {
                console.log("=== 珂朵莉模块特色功能测试 ===");
                
                // 测试承诺消息系统
                chthollyPromise("珂朵莉会永远陪伴大家", 10)
                    .then(message => {
                        console.log("承诺实现: " + message);
                    });
                
                // 测试图片处理功能
                printMylove({
                    url: "https://example.com/chtholly.jpg",
                    mode: "Pixel", 
                    width: "500px",
                    height: "400px",
                    scale: 2.0
                }).then(result => {
                    console.log("图片转换完成:");
                    console.log(result);
                }).catch(error => {
                    console.error("图片处理失败:", error);
                });
            }
            
            // 页面加载完成后自动测试
            document.addEventListener('DOMContentLoaded', function() {
                console.log("珂朵莉模块测试页面加载完成 ❀");
                
                // 延迟测试，确保所有组件都已初始化
                setTimeout(() => {
                    testChthollyFeatures();
                }, 1000);
            });
        }
    }
}