// ==========================================
// CHTL实际项目验证：现代博客系统
// 验证CHTL在真实开发场景中的效果
// ==========================================

// ========== 设计系统配置 ==========
[Configuration] {
    DEBUG_MODE = true;
    INDEX_INITIAL_COUNT = 1;
    DISABLE_NAME_GROUP = false;
}

// ========== 设计变量组 ==========
[Template] @Var DesignTokens {
    // 颜色系统
    primary: "#2563eb";
    secondary: "#64748b";
    accent: "#f59e0b";
    success: "#10b981";
    warning: "#f59e0b";
    error: "#ef4444";
    
    // 灰度色阶
    gray50: "#f8fafc";
    gray100: "#f1f5f9";
    gray200: "#e2e8f0";
    gray300: "#cbd5e1";
    gray400: "#94a3b8";
    gray500: "#64748b";
    gray600: "#475569";
    gray700: "#334155";
    gray800: "#1e293b";
    gray900: "#0f172a";
    
    // 字体系统
    fontSans: "'Inter', -apple-system, BlinkMacSystemFont, sans-serif";
    fontMono: "'JetBrains Mono', 'Fira Code', monospace";
    
    // 阴影系统
    shadowSm: "0 1px 2px 0 rgb(0 0 0 / 0.05)";
    shadowMd: "0 4px 6px -1px rgb(0 0 0 / 0.1)";
    shadowLg: "0 10px 15px -3px rgb(0 0 0 / 0.1)";
    shadowXl: "0 20px 25px -5px rgb(0 0 0 / 0.1)";
    
    // 边框半径
    radiusSm: "0.25rem";
    radiusMd: "0.5rem";
    radiusLg: "0.75rem";
    radiusXl: "1rem";
    
    // 间距系统
    space1: "0.25rem";
    space2: "0.5rem";
    space3: "0.75rem";
    space4: "1rem";
    space6: "1.5rem";
    space8: "2rem";
    space12: "3rem";
    space16: "4rem";
    space20: "5rem";
}

// ========== 基础样式组件 ==========
[Template] @Style BaseCard {
    background: white;
    border-radius: DesignTokens(radiusLg);
    box-shadow: DesignTokens(shadowMd);
    padding: DesignTokens(space6);
    border: 1px solid DesignTokens(gray200);
    transition: all 0.3s ease;
}

[Template] @Style BaseButton {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: DesignTokens(space3) DesignTokens(space6);
    border-radius: DesignTokens(radiusMd);
    font-weight: 500;
    font-size: 0.875rem;
    border: none;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
}

[Template] @Style BaseInput {
    width: 100%;
    padding: DesignTokens(space3);
    border: 1px solid DesignTokens(gray300);
    border-radius: DesignTokens(radiusMd);
    font-size: 1rem;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
    
    &:focus {
        outline: none;
        border-color: DesignTokens(primary);
        box-shadow: 0 0 0 3px rgb(37 99 235 / 0.1);
    }
}

// ========== 组件元素模板 ==========
[Template] @Element PrimaryButton {
    button {
        style {
            @Style BaseButton;
            background: DesignTokens(primary);
            color: white;
            
            &:hover {
                background: #1d4ed8;
                transform: translateY(-1px);
                box-shadow: DesignTokens(shadowLg);
            }
            
            &:active {
                transform: translateY(0);
            }
        }
        
        script {
            {{.btn-primary}}->listen({
                click: (event) => {
                    event.target.style.background = DesignTokens(success);
                    setTimeout(() => {
                        event.target.style.background = DesignTokens(primary);
                    }, 200);
                }
            });
        }
    }
}

[Template] @Element BlogCard {
    article {
        class: blog-card;
        
        style {
            @Style BaseCard;
            
            &:hover {
                transform: translateY(-4px);
                box-shadow: DesignTokens(shadowXl);
            }
            
            .blog-meta {
                display: flex;
                align-items: center;
                gap: DesignTokens(space2);
                margin-bottom: DesignTokens(space4);
                font-size: 0.875rem;
                color: DesignTokens(gray500);
            }
            
            .blog-title {
                font-size: 1.25rem;
                font-weight: 600;
                color: DesignTokens(gray900);
                margin-bottom: DesignTokens(space3);
                line-height: 1.4;
            }
            
            .blog-excerpt {
                color: DesignTokens(gray600);
                line-height: 1.6;
                margin-bottom: DesignTokens(space4);
            }
            
            .blog-tags {
                display: flex;
                gap: DesignTokens(space2);
                margin-bottom: DesignTokens(space4);
            }
            
            .tag {
                background: DesignTokens(gray100);
                color: DesignTokens(gray700);
                padding: DesignTokens(space1) DesignTokens(space3);
                border-radius: DesignTokens(radiusSm);
                font-size: 0.75rem;
                font-weight: 500;
            }
            
            .read-more {
                @Style BaseButton;
                background: transparent;
                color: DesignTokens(primary);
                border: 1px solid DesignTokens(primary);
                padding: DesignTokens(space2) DesignTokens(space4);
                font-size: 0.875rem;
                
                &:hover {
                    background: DesignTokens(primary);
                    color: white;
                }
            }
        }
        
        script {
            // 增强交互功能
            {{.blog-card}}->listen({
                mouseenter: (event) => {
                    // 预加载文章内容
                    const articleId = event.target.dataset.articleId;
                    if (articleId) {
                        console.log('Preloading article:', articleId);
                    }
                },
                
                click: (event) => {
                    // 文章点击统计
                    if (event.target.classList.contains('read-more')) {
                        console.log('Read more clicked');
                    }
                }
            });
            
            // 虚对象管理文章交互
            vir ArticleController = listen({
                like: (articleId) => {
                    {{`.blog-card[data-article-id="${articleId}"] .like-btn`}}->classList->add('liked');
                    console.log('Article liked:', articleId);
                },
                
                share: (articleId) => {
                    if (navigator.share) {
                        navigator.share({
                            title: 'Check out this article',
                            url: window.location.href
                        });
                    }
                },
                
                bookmark: (articleId) => {
                    let bookmarks = JSON.parse(localStorage.getItem('bookmarks') || '[]');
                    if (!bookmarks.includes(articleId)) {
                        bookmarks.push(articleId);
                        localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
                    }
                }
            });
        }
    }
}

[Template] @Element SearchBox {
    div {
        class: search-container;
        
        style {
            position: relative;
            margin-bottom: DesignTokens(space6);
            
            .search-input {
                @Style BaseInput;
                padding-left: DesignTokens(space12);
                background: white;
                
                &::placeholder {
                    color: DesignTokens(gray400);
                }
            }
            
            .search-icon {
                position: absolute;
                left: DesignTokens(space3);
                top: 50%;
                transform: translateY(-50%);
                color: DesignTokens(gray400);
                pointer-events: none;
            }
            
            .search-results {
                position: absolute;
                top: 100%;
                left: 0;
                right: 0;
                background: white;
                border-radius: DesignTokens(radiusMd);
                box-shadow: DesignTokens(shadowLg);
                border: 1px solid DesignTokens(gray200);
                z-index: 1000;
                max-height: 300px;
                overflow-y: auto;
                display: none;
            }
            
            .search-result-item {
                padding: DesignTokens(space3);
                border-bottom: 1px solid DesignTokens(gray100);
                cursor: pointer;
                
                &:hover {
                    background: DesignTokens(gray50);
                }
                
                &:last-child {
                    border-bottom: none;
                }
            }
        }
        
        input {
            class: search-input;
            type: "text";
            placeholder: "搜索文章...";
        }
        
        script {
            // 搜索功能实现
            vir SearchController = listen({
                search: (query) => {
                    if (query.length < 2) {
                        {{.search-results}}->style->display = 'none';
                        return;
                    }
                    
                    // 模拟搜索API调用
                    setTimeout(() => {
                        const results = [
                            { title: 'CHTL入门指南', excerpt: '学习CHTL的基础语法...' },
                            { title: '现代前端开发', excerpt: '探讨前端技术趋势...' },
                            { title: 'JavaScript最佳实践', excerpt: '提高代码质量的方法...' }
                        ].filter(item => 
                            item.title.includes(query) || item.excerpt.includes(query)
                        );
                        
                        SearchController->showResults(results);
                    }, 300);
                },
                
                showResults: (results) => {
                    const container = {{.search-results}};
                    container->innerHTML = results.map(item => `
                        <div class="search-result-item">
                            <div class="font-medium">${item.title}</div>
                            <div class="text-gray-500 text-sm">${item.excerpt}</div>
                        </div>
                    `)->join('');
                    container->style->display = 'block';
                },
                
                hideResults: () => {
                    {{.search-results}}->style->display = 'none';
                }
            });
            
            // 绑定搜索事件
            {{.search-input}}->listen({
                input: (event) => {
                    SearchController->search(event.target.value);
                },
                
                blur: () => {
                    // 延迟隐藏结果，允许点击结果项
                    setTimeout(() => SearchController->hideResults(), 200);
                }
            });
        }
    }
}

// ========== 自定义增强组件 ==========
[Custom] @Element AnimatedBlogCard {
    inherit @Element BlogCard;
    
    style {
        overflow: hidden;
        
        &::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, transparent, DesignTokens(primary), transparent);
            transition: left 0.5s ease;
        }
        
        &:hover::before {
            left: 100%;
        }
        
        .blog-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: DesignTokens(radiusMd);
            margin-bottom: DesignTokens(space4);
            transition: transform 0.3s ease;
        }
        
        &:hover .blog-image {
            transform: scale(1.05);
        }
    }
    
    script {
        // 增强动画效果
        {{.blog-card}}->listen({
            mouseenter: (event) => {
                animate({
                    target: event.target,
                    duration: 300,
                    begin: { transform: 'scale(1)' },
                    end: { transform: 'scale(1.02)' },
                    easing: 'ease-out'
                });
            },
            
            mouseleave: (event) => {
                animate({
                    target: event.target,
                    duration: 300,
                    begin: { transform: 'scale(1.02)' },
                    end: { transform: 'scale(1)' },
                    easing: 'ease-out'
                });
            }
        });
    }
}

// ========== 全局样式 ==========
style {
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }
    
    html {
        font-family: DesignTokens(fontSans);
        line-height: 1.6;
        color: DesignTokens(gray900);
        background: DesignTokens(gray50);
    }
    
    body {
        min-height: 100vh;
        background: linear-gradient(135deg, DesignTokens(gray50) 0%, #ffffff 100%);
    }
    
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 DesignTokens(space6);
    }
    
    .grid {
        display: grid;
        gap: DesignTokens(space6);
    }
    
    .grid-2 {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
    
    .grid-3 {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
    
    .header {
        background: white;
        box-shadow: DesignTokens(shadowMd);
        margin-bottom: DesignTokens(space8);
        
        .header-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: DesignTokens(space4) 0;
        }
        
        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: DesignTokens(primary);
        }
        
        .nav {
            display: flex;
            gap: DesignTokens(space6);
            
            a {
                color: DesignTokens(gray600);
                text-decoration: none;
                font-weight: 500;
                transition: color 0.2s ease;
                
                &:hover {
                    color: DesignTokens(primary);
                }
            }
        }
    }
    
    .hero {
        text-align: center;
        padding: DesignTokens(space16) 0;
        
        h1 {
            font-size: 3rem;
            font-weight: 800;
            color: DesignTokens(gray900);
            margin-bottom: DesignTokens(space4);
            background: linear-gradient(135deg, DesignTokens(primary), DesignTokens(accent));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        p {
            font-size: 1.25rem;
            color: DesignTokens(gray600);
            max-width: 600px;
            margin: 0 auto DesignTokens(space8);
        }
    }
    
    .section {
        margin-bottom: DesignTokens(space12);
        
        h2 {
            font-size: 2rem;
            font-weight: 700;
            color: DesignTokens(gray900);
            margin-bottom: DesignTokens(space6);
            text-align: center;
        }
    }
    
    .fade-in {
        opacity: 0;
        transform: translateY(20px);
        animation: fadeInUp 0.6s ease forwards;
    }
    
    @keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .loading {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255,255,255,.3);
        border-radius: 50%;
        border-top-color: #fff;
        animation: spin 1s ease-in-out infinite;
    }
    
    @keyframes spin {
        to { transform: rotate(360deg); }
    }
}

// ========== 全局脚本 ==========
script {
    // 应用初始化
    {{document}}->addEventListener('DOMContentLoaded', () => {
        console.log('现代博客系统加载完成');
        
        // 虚对象：应用控制器
        vir AppController = listen({
            init: () => {
                console.log('Blog app initialized');
                AppController->setupInfiniteScroll();
                AppController->setupThemeToggle();
                AppController->trackPerformance();
            },
            
            setupInfiniteScroll: () => {
                let loading = false;
                let page = 1;
                
                window.addEventListener('scroll', () => {
                    if (loading) return;
                    
                    const { scrollTop, scrollHeight, clientHeight } = document.documentElement;
                    
                    if (scrollTop + clientHeight >= scrollHeight - 1000) {
                        loading = true;
                        AppController->loadMorePosts(++page);
                    }
                });
            },
            
            loadMorePosts: (page) => {
                // 显示加载指示器
                const loader = document.createElement('div');
                loader.className = 'loading';
                loader.style.margin = '20px auto';
                loader.style.display = 'block';
                {{.grid}}->appendChild(loader);
                
                // 模拟API调用
                setTimeout(() => {
                    // 移除加载指示器
                    loader.remove();
                    
                    // 这里应该添加新的博客卡片
                    console.log('Loaded page:', page);
                    
                    loading = false;
                }, 1500);
            },
            
            setupThemeToggle: () => {
                // 主题切换功能
                const savedTheme = localStorage.getItem('theme') || 'light';
                document.documentElement.setAttribute('data-theme', savedTheme);
            },
            
            trackPerformance: () => {
                // 性能监控
                const perfData = {
                    loadTime: performance.now(),
                    memoryUsage: performance.memory ? performance.memory.usedJSHeapSize : 0,
                    connectionType: navigator.connection ? navigator.connection.effectiveType : 'unknown'
                };
                
                console.log('Performance metrics:', perfData);
            }
        });
        
        // 初始化应用
        AppController->init();
        
        // 文章交互统计
        {{.blog-card}}->delegate({
            target: '.read-more',
            click: (event) => {
                const articleTitle = event.target.closest('.blog-card').querySelector('.blog-title').textContent;
                console.log('Read more clicked:', articleTitle);
                
                // 发送统计数据
                if ('navigator' in window && 'sendBeacon' in navigator) {
                    navigator.sendBeacon('/api/analytics', JSON.stringify({
                        event: 'article_click',
                        article: articleTitle,
                        timestamp: Date.now()
                    }));
                }
            }
        });
    });
    
    // 工具函数
    const utils = {
        formatDate: (date) => {
            return new Intl.DateTimeFormat('zh-CN', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            }).format(new Date(date));
        },
        
        debounce: (func, wait) => {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        },
        
        throttle: (func, limit) => {
            let inThrottle;
            return function() {
                const args = arguments;
                const context = this;
                if (!inThrottle) {
                    func.apply(context, args);
                    inThrottle = true;
                    setTimeout(() => inThrottle = false, limit);
                }
            }
        }
    };
    
    // 全局错误处理
    window.addEventListener('error', (event) => {
        console.error('Global error caught:', event.error);
    });
    
    // Service Worker 注册
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/sw.js').then((registration) => {
            console.log('SW registered: ', registration);
        }).catch((registrationError) => {
            console.log('SW registration failed: ', registrationError);
        });
    }
}

// ========== 主应用结构 ==========
div {
    class: app;
    
    // 头部
    header {
        class: header;
        
        div {
            class: container;
            
            div {
                class: header-content;
                
                div {
                    class: logo;
                    text { "现代博客" }
                }
                
                nav {
                    class: nav;
                    
                    a { href: "#home"; text { "首页" } }
                    a { href: "#articles"; text { "文章" } }
                    a { href: "#categories"; text { "分类" } }
                    a { href: "#about"; text { "关于" } }
                }
            }
        }
    }
    
    // 主内容
    main {
        div {
            class: container;
            
            // 英雄区域
            section {
                class: hero fade-in;
                
                h1 { text { "探索技术的无限可能" } }
                p { text { "分享前沿技术洞察，记录开发心得体验，与你一同成长" } }
                
                @Element SearchBox;
            }
            
            // 博客文章列表
            section {
                class: section;
                
                h2 { text { "最新文章" } }
                
                div {
                    class: grid grid-2;
                    
                    // 使用自定义增强博客卡片
                    [Custom] @Element AnimatedBlogCard {
                        div {
                            class: blog-meta;
                            text { "2024年1月15日 · 5分钟阅读" }
                        }
                        
                        h3 {
                            class: blog-title;
                            text { "CHTL编程语言深度解析" }
                        }
                        
                        p {
                            class: blog-excerpt;
                            text { "深入了解CHTL语言的设计理念、语法特性和实际应用场景，探讨其在现代Web开发中的价值。" }
                        }
                        
                        div {
                            class: blog-tags;
                            span { class: tag; text { "CHTL" } }
                            span { class: tag; text { "前端" } }
                            span { class: tag; text { "编程语言" } }
                        }
                        
                        button {
                            class: read-more;
                            text { "阅读全文" }
                        }
                    }
                    
                    [Custom] @Element AnimatedBlogCard {
                        div {
                            class: blog-meta;
                            text { "2024年1月12日 · 8分钟阅读" }
                        }
                        
                        h3 {
                            class: blog-title;
                            text { "现代前端开发最佳实践" }
                        }
                        
                        p {
                            class: blog-excerpt;
                            text { "总结现代前端开发中的最佳实践，包括性能优化、代码组织、测试策略等关键方面。" }
                        }
                        
                        div {
                            class: blog-tags;
                            span { class: tag; text { "前端" } }
                            span { class: tag; text { "性能优化" } }
                            span { class: tag; text { "最佳实践" } }
                        }
                        
                        button {
                            class: read-more;
                            text { "阅读全文" }
                        }
                    }
                    
                    [Custom] @Element AnimatedBlogCard {
                        div {
                            class: blog-meta;
                            text { "2024年1月10日 · 6分钟阅读" }
                        }
                        
                        h3 {
                            class: blog-title;
                            text { "JavaScript异步编程进阶" }
                        }
                        
                        p {
                            class: blog-excerpt;
                            text { "从Promise到async/await，深入理解JavaScript异步编程的演进历程和实际应用技巧。" }
                        }
                        
                        div {
                            class: blog-tags;
                            span { class: tag; text { "JavaScript" } }
                            span { class: tag; text { "异步编程" } }
                            span { class: tag; text { "进阶" } }
                        }
                        
                        button {
                            class: read-more;
                            text { "阅读全文" }
                        }
                    }
                }
            }
        }
    }
    
    // 页脚
    footer {
        style {
            background: white;
            border-top: 1px solid DesignTokens(gray200);
            margin-top: DesignTokens(space16);
            padding: DesignTokens(space8) 0;
            text-align: center;
            color: DesignTokens(gray500);
        }
        
        div {
            class: container;
            
            p { text { "© 2024 现代博客系统. 基于CHTL技术构建" } }
            p { 
                style { 
                    margin-top: DesignTokens(space2); 
                    font-size: 0.875rem; 
                }
                text { "展示CHTL编译器的强大功能和开发效率" } 
            }
        }
    }
}