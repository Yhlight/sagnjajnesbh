{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "CHTL JS",
    "patterns": [
        { "include": "#comments" },
        { "include": "#chtl-js-expressions" },
        { "include": "#virtual-objects" },
        { "include": "#chtl-js-functions" },
        { "include": "#javascript" },
        { "include": "#strings" },
        { "include": "#keywords" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.chtl-js",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.chtl-js",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "chtl-js-expressions": {
            "patterns": [
                {
                    "name": "string.template.chtl-js",
                    "begin": "\\{\\{",
                    "end": "\\}\\}",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.template-expression.begin.chtl-js" }
                    },
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.template-expression.end.chtl-js" }
                    },
                    "patterns": [
                        { "include": "#chtl-js-content" },
                        { "include": "#virtual-objects" },
                        { "include": "#javascript" }
                    ]
                }
            ]
        },
        "chtl-js-content": {
            "patterns": [
                {
                    "name": "variable.other.script-reference.chtl-js",
                    "match": "\\{\\{&[a-zA-Z_-][a-zA-Z0-9_-]*\\}\\}"
                },
                {
                    "name": "support.function.chtl-js-builtin.chtl-js",
                    "match": "\\b(iNeverAway|printMylove|createCHTLJSFunction|virFunctionBind)\\b"
                },
                { "include": "#chtl-js-key-value-pairs" },
                { "include": "#undecorated-literals" }
            ]
        },
        "chtl-js-key-value-pairs": {
            "patterns": [
                {
                    "name": "meta.object-literal.key.chtl-js",
                    "begin": "([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*:",
                    "beginCaptures": {
                        "1": { "name": "entity.name.function.key.chtl-js" }
                    },
                    "end": "(?=[,}]|$)",
                    "patterns": [
                        { "include": "#chtl-js-values" }
                    ]
                }
            ]
        },
        "chtl-js-values": {
            "patterns": [
                { "include": "#chtl-js-functions" },
                { "include": "#virtual-objects" },
                { "include": "#javascript" },
                { "include": "#strings" },
                { "include": "#numbers" },
                { "include": "#booleans" }
            ]
        },
        "virtual-objects": {
            "patterns": [
                {
                    "name": "entity.name.type.virtual-object.chtl-js",
                    "begin": "\\bvir\\s*\\{",
                    "beginCaptures": {
                        "0": { "name": "keyword.control.virtual-object.chtl-js" }
                    },
                    "end": "\\}",
                    "patterns": [
                        {
                            "name": "meta.virtual-object.property.chtl-js",
                            "match": "([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*(:)\\s*([^,}]*)",
                            "captures": {
                                "1": { "name": "entity.other.attribute-name.virtual.chtl-js" },
                                "2": { "name": "punctuation.separator.key-value.chtl-js" },
                                "3": { "name": "string.unquoted.virtual-value.chtl-js" }
                            }
                        },
                        {
                            "name": "entity.other.attribute-name.virtual-key.chtl-js",
                            "match": "([a-zA-Z_$][a-zA-Z0-9_$]*)(?=\\s*[,}])"
                        },
                        { "include": "#comments" }
                    ]
                }
            ]
        },
        "chtl-js-functions": {
            "patterns": [
                {
                    "name": "meta.function.chtl-js-iNeverAway",
                    "begin": "\\biNeverAway\\s*\\{",
                    "beginCaptures": {
                        "0": { "name": "entity.name.function.chtl-js.iNeverAway" }
                    },
                    "end": "\\}",
                    "patterns": [
                        { "include": "#chtl-js-key-value-pairs" },
                        { "include": "#virtual-objects" },
                        { "include": "#undecorated-literals" },
                        { "include": "#comments" }
                    ]
                },
                {
                    "name": "meta.function.chtl-js-printMylove",
                    "begin": "\\bprintMylove\\s*\\{",
                    "beginCaptures": {
                        "0": { "name": "entity.name.function.chtl-js.printMylove" }
                    },
                    "end": "\\}",
                    "patterns": [
                        {
                            "name": "entity.other.attribute-name.image-property.chtl-js",
                            "match": "\\b(imageUrl|charSet|pixelDensity|outputFormat|colorMap)\\b"
                        },
                        { "include": "#chtl-js-key-value-pairs" },
                        { "include": "#undecorated-literals" },
                        { "include": "#comments" }
                    ]
                },
                {
                    "name": "meta.function.chtl-js-custom",
                    "begin": "\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*\\{",
                    "beginCaptures": {
                        "1": { "name": "entity.name.function.chtl-js.custom" }
                    },
                    "end": "\\}",
                    "patterns": [
                        { "include": "#chtl-js-key-value-pairs" },
                        { "include": "#virtual-objects" },
                        { "include": "#undecorated-literals" },
                        { "include": "#comments" }
                    ]
                }
            ]
        },
        "undecorated-literals": {
            "patterns": [
                {
                    "name": "string.unquoted.undecorated-literal.chtl-js",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_-]*(?=\\s*[,}]|$)"
                }
            ]
        },
        "javascript": {
            "patterns": [
                {
                    "name": "keyword.control.js.chtl-js",
                    "match": "\\b(var|let|const|function|if|else|for|while|do|break|continue|return|try|catch|finally|throw|new|this|class|extends|super|import|export|default)\\b"
                },
                {
                    "name": "support.function.js.chtl-js",
                    "match": "\\b(console|document|window|Array|Object|String|Number|Boolean|Date|Math|JSON|Promise|setTimeout|setInterval|clearTimeout|clearInterval)\\b"
                },
                {
                    "name": "entity.name.function.js.chtl-js",
                    "match": "\\b[a-zA-Z_$][a-zA-Z0-9_$]*(?=\\s*\\()"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.chtl-js",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.chtl-js",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.chtl-js",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.chtl-js",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.template.chtl-js",
                    "begin": "`",
                    "end": "`",
                    "patterns": [
                        {
                            "name": "constant.character.escape.chtl-js",
                            "match": "\\\\."
                        },
                        {
                            "name": "variable.other.template-interpolation.chtl-js",
                            "begin": "\\$\\{",
                            "end": "\\}",
                            "patterns": [
                                { "include": "#javascript" }
                            ]
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.integer.chtl-js",
                    "match": "\\b\\d+\\b"
                },
                {
                    "name": "constant.numeric.float.chtl-js",
                    "match": "\\b\\d*\\.\\d+\\b"
                },
                {
                    "name": "constant.numeric.hex.chtl-js",
                    "match": "\\b0x[0-9a-fA-F]+\\b"
                }
            ]
        },
        "booleans": {
            "patterns": [
                {
                    "name": "constant.language.boolean.chtl-js",
                    "match": "\\b(true|false)\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.chtl-js",
                    "match": "[=:]"
                },
                {
                    "name": "keyword.operator.logical.chtl-js",
                    "match": "(\\&\\&|\\|\\||!)"
                },
                {
                    "name": "keyword.operator.comparison.chtl-js",
                    "match": "(==|!=|<=|>=|<|>|===|!==)"
                },
                {
                    "name": "keyword.operator.arithmetic.chtl-js",
                    "match": "(\\+|\\-|\\*|\\/|%|\\+\\+|--)"
                },
                {
                    "name": "punctuation.definition.block.chtl-js",
                    "match": "[{}]"
                },
                {
                    "name": "punctuation.definition.array.chtl-js",
                    "match": "[\\[\\]]"
                },
                {
                    "name": "punctuation.definition.group.chtl-js",
                    "match": "[()]"
                },
                {
                    "name": "punctuation.separator.chtl-js",
                    "match": "[,;]"
                },
                {
                    "name": "punctuation.accessor.chtl-js",
                    "match": "\\."
                }
            ]
        }
    },
    "scopeName": "source.chtl-js"
}